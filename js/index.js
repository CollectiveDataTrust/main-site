/* Generated by the Nim Compiler v0.18.1 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI135572 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI152211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI152207 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI152209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134684 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI134678 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI26454 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26450 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26446 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26438 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26434 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26430 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26426 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26422 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26418 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26414 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26402 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26394 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26390 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26386 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26382 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26378 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26217 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26289 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26287 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26233 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI26532 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26530 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26528 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26237 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26235 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI38084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI38085 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI134765 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134761 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134135 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134717 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134705 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI134726 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI134724 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI134015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134718 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134709 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI134752 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134748 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134743 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134738 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134734 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI134732 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134711 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI152213 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI160631 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI160485 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI160480 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3865 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3867 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3855 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3859 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3871 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3875 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI15346 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3821 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3931 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI127 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI153 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3925 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3839 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3841 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3863 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI176253 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI117 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI139256 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI176234 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI176231 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI176228 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI143 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI137 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI9274 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI151 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI176202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI176206 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI176204 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI176665 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NNI176202 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI176202, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI176202, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI176202, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI176202, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI176202, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI176202, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI176202, name: "JArray", len: 0, sons: null}}};
NTI176202.node = NNI176202;
var NNI176234 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI139256, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI117, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI151, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI176204, name: "Field3", sons: null}]};
NTI176234.node = NNI176234;
NTI176231.base = NTI176234;
var NNI176228 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI176231, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI117, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI117, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI117, name: "last", sons: null}]};
NTI176228.node = NNI176228;
NTI176253.base = NTI176204;
var NNI176206 = {kind: 3, offset: "kind", len: 7, typ: NTI176202, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI151, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI9274, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI137, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI143, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI176228, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI176253, name: "elems", sons: null}]]};
NTI176206.node = NNI176206;
NTI176204.base = NTI176206;
NTI176665.base = NTI176204;
var NNI3863 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3863.node = NNI3863;
var NNI3841 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3841.node = NNI3841;
NTI3925.base = NTI3839;
NTI3931.base = NTI3839;
var NNI3839 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3925, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI153, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI151, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI151, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI127, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3931, name: "up", sons: null}]};
NTI3839.node = NNI3839;
var NNI3821 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3821.node = NNI3821;
NTI3839.base = NTI3821;
NTI3841.base = NTI3839;
NTI3863.base = NTI3841;
var NNI15346 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI153, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI117, name: "Field1", sons: null}]};
NTI15346.node = NNI15346;
var NNI3875 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3875.node = NNI3875;
NTI3875.base = NTI3841;
var NNI3871 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3871.node = NNI3871;
NTI3871.base = NTI3841;
var NNI3859 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3859.node = NNI3859;
var NNI3855 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3855.node = NNI3855;
NTI3855.base = NTI3841;
NTI3859.base = NTI3855;
var NNI3867 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3867.node = NNI3867;
var NNI3865 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3865.node = NNI3865;
NTI3865.base = NTI3841;
NTI3867.base = NTI3865;
var NNI134015 = {kind: 2, offset: 0, typ: null, name: null, len: 118, sons: {"0": {kind: 1, offset: 0, typ: NTI134015, name: "#text", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI134015, name: "#int", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI134015, name: "#bool", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI134015, name: "#vthunk", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI134015, name: "#dthunk", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI134015, name: "#component", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI134015, name: "#verbatim", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI134015, name: "html", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI134015, name: "head", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI134015, name: "title", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI134015, name: "base", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI134015, name: "link", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI134015, name: "meta", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI134015, name: "style", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI134015, name: "script", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI134015, name: "noscript", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI134015, name: "body", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI134015, name: "section", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI134015, name: "nav", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI134015, name: "article", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI134015, name: "aside", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI134015, name: "h1", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI134015, name: "h2", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI134015, name: "h3", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI134015, name: "h4", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI134015, name: "h5", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI134015, name: "h6", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI134015, name: "header", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI134015, name: "footer", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI134015, name: "address", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI134015, name: "main", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI134015, name: "p", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI134015, name: "hr", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI134015, name: "pre", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI134015, name: "blockquote", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI134015, name: "ol", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI134015, name: "ul", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI134015, name: "li", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI134015, name: "dl", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI134015, name: "dt", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI134015, name: "dd", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI134015, name: "figure", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI134015, name: "figcaption", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI134015, name: "div", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI134015, name: "a", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI134015, name: "em", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI134015, name: "strong", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI134015, name: "small", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI134015, name: "s", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI134015, name: "cite", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI134015, name: "quote", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI134015, name: "dfn", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI134015, name: "abbr", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI134015, name: "data", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI134015, name: "time", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI134015, name: "code", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI134015, name: "var", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI134015, name: "samp", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI134015, name: "kdb", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI134015, name: "sub", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI134015, name: "sup", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI134015, name: "i", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI134015, name: "b", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI134015, name: "u", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI134015, name: "mark", len: 0, sons: null}, 
"65": {kind: 1, offset: 65, typ: NTI134015, name: "ruby", len: 0, sons: null}, 
"66": {kind: 1, offset: 66, typ: NTI134015, name: "rt", len: 0, sons: null}, 
"67": {kind: 1, offset: 67, typ: NTI134015, name: "rp", len: 0, sons: null}, 
"68": {kind: 1, offset: 68, typ: NTI134015, name: "bdi", len: 0, sons: null}, 
"69": {kind: 1, offset: 69, typ: NTI134015, name: "dbo", len: 0, sons: null}, 
"70": {kind: 1, offset: 70, typ: NTI134015, name: "span", len: 0, sons: null}, 
"71": {kind: 1, offset: 71, typ: NTI134015, name: "br", len: 0, sons: null}, 
"72": {kind: 1, offset: 72, typ: NTI134015, name: "wbr", len: 0, sons: null}, 
"73": {kind: 1, offset: 73, typ: NTI134015, name: "ins", len: 0, sons: null}, 
"74": {kind: 1, offset: 74, typ: NTI134015, name: "del", len: 0, sons: null}, 
"75": {kind: 1, offset: 75, typ: NTI134015, name: "img", len: 0, sons: null}, 
"76": {kind: 1, offset: 76, typ: NTI134015, name: "iframe", len: 0, sons: null}, 
"77": {kind: 1, offset: 77, typ: NTI134015, name: "embed", len: 0, sons: null}, 
"78": {kind: 1, offset: 78, typ: NTI134015, name: "object", len: 0, sons: null}, 
"79": {kind: 1, offset: 79, typ: NTI134015, name: "param", len: 0, sons: null}, 
"80": {kind: 1, offset: 80, typ: NTI134015, name: "video", len: 0, sons: null}, 
"81": {kind: 1, offset: 81, typ: NTI134015, name: "audio", len: 0, sons: null}, 
"82": {kind: 1, offset: 82, typ: NTI134015, name: "source", len: 0, sons: null}, 
"83": {kind: 1, offset: 83, typ: NTI134015, name: "track", len: 0, sons: null}, 
"84": {kind: 1, offset: 84, typ: NTI134015, name: "canvas", len: 0, sons: null}, 
"85": {kind: 1, offset: 85, typ: NTI134015, name: "map", len: 0, sons: null}, 
"86": {kind: 1, offset: 86, typ: NTI134015, name: "area", len: 0, sons: null}, 
"87": {kind: 1, offset: 87, typ: NTI134015, name: "svg", len: 0, sons: null}, 
"88": {kind: 1, offset: 88, typ: NTI134015, name: "math", len: 0, sons: null}, 
"89": {kind: 1, offset: 89, typ: NTI134015, name: "table", len: 0, sons: null}, 
"90": {kind: 1, offset: 90, typ: NTI134015, name: "caption", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI134015, name: "colgroup", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI134015, name: "col", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI134015, name: "tbody", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI134015, name: "thead", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI134015, name: "tfoot", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI134015, name: "tr", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI134015, name: "td", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI134015, name: "th", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI134015, name: "form", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI134015, name: "fieldset", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI134015, name: "legend", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI134015, name: "label", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI134015, name: "input", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI134015, name: "button", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI134015, name: "select", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI134015, name: "datalist", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI134015, name: "optgroup", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI134015, name: "option", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI134015, name: "textarea", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI134015, name: "keygen", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI134015, name: "output", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI134015, name: "progress", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI134015, name: "meter", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI134015, name: "details", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI134015, name: "summary", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI134015, name: "command", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI134015, name: "menu", len: 0, sons: null}}};
NTI134015.node = NNI134015;
NTI134724.base = NTI134709;
NTI134726.base = NTI153;
var NNI134135 = {kind: 2, offset: 0, typ: null, name: null, len: 31, sons: {"0": {kind: 1, offset: 0, typ: NTI134135, name: "onclick", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI134135, name: "oncontextmenu", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI134135, name: "ondblclick", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI134135, name: "onkeyup", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI134135, name: "onkeydown", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI134135, name: "onkeypressed", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI134135, name: "onfocus", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI134135, name: "onblur", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI134135, name: "onchange", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI134135, name: "onscroll", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI134135, name: "onmousedown", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI134135, name: "onmouseenter", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI134135, name: "onmouseleave", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI134135, name: "onmousemove", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI134135, name: "onmouseout", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI134135, name: "onmouseover", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI134135, name: "onmouseup", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI134135, name: "ondrag", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI134135, name: "ondragend", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI134135, name: "ondragenter", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI134135, name: "ondragleave", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI134135, name: "ondragover", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI134135, name: "ondragstart", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI134135, name: "ondrop", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI134135, name: "onsubmit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI134135, name: "oninput", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI134135, name: "onanimationstart", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI134135, name: "onanimationend", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI134135, name: "onanimationiteration", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI134135, name: "onkeyupenter", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI134135, name: "onkeyuplater", len: 0, sons: null}}};
NTI134135.node = NNI134135;
var NNI134717 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI134135, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI134761, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI134765, name: "Field2", sons: null}]};
NTI134717.node = NNI134717;
NTI134705.base = NTI134717;
var NNI38084 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI38084.node = NNI38084;
NTI38085.base = NTI38084;
NTI26528.base = NTI26235;
NTI26530.base = NTI26235;
NTI26532.base = NTI26235;
var NNI26233 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI26233, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI26233, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI26233, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI26233, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI26233, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI26233, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI26233, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI26233, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI26233, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI26233, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI26233, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI26233, name: "NotationNode", len: 0, sons: null}}};
NTI26233.node = NNI26233;
var NNI26289 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI153, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI153, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI153, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI153, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI153, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI153, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI153, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI153, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI153, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI153, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI153, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI153, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI153, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI153, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI153, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI153, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI153, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI153, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI153, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI153, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI153, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI153, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI153, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI153, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI153, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI153, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI153, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI153, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI153, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI153, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI153, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI153, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI153, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI153, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI153, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI153, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI153, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI153, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI153, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI153, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI153, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI153, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI153, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI153, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI153, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI153, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI153, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI153, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI153, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI153, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI153, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI153, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI153, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI153, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI153, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI153, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI153, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI153, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI153, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI153, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI153, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI153, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI153, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI153, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI153, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI153, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI153, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI153, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI153, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI153, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI153, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI153, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI153, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI153, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI153, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI153, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI153, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI153, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI153, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI153, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI153, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI153, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI153, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI153, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI153, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI153, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI153, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI153, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI153, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI153, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI117, name: "zIndex", sons: null}]};
NTI26289.node = NNI26289;
NTI26289.base = NTI3821;
NTI26287.base = NTI26289;
var NNI26237 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI26528, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI26530, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI26532, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI153, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI26235, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI26235, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI26235, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI153, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI26233, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI153, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI26235, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI26235, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI153, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI26287, name: "style", sons: null}]};
NTI26237.node = NNI26237;
var NNI26217 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI26378, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI26382, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI26386, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI26390, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI26394, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI26398, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI26402, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI26406, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI26410, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI26414, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI26418, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI26422, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI26426, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI26430, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI26434, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI26438, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI26442, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI26446, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI26450, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI26454, name: "onunload", sons: null}]};
NTI26217.node = NNI26217;
NTI26217.base = NTI3821;
NTI26237.base = NTI26217;
NTI26235.base = NTI26237;
var NNI134718 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI134015, name: "kind", sons: null}, 
{kind: 1, offset: "index", len: 0, typ: NTI117, name: "index", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI153, name: "id", sons: null}, 
{kind: 1, offset: "class", len: 0, typ: NTI153, name: "class", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI153, name: "text", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI134724, name: "kids", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI134726, name: "attrs", sons: null}, 
{kind: 1, offset: "events", len: 0, typ: NTI134705, name: "events", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI38085, name: "style", sons: null}, 
{kind: 1, offset: "dom", len: 0, typ: NTI26235, name: "dom", sons: null}]};
NTI134718.node = NNI134718;
NTI134718.base = NTI3821;
NTI134709.base = NTI134718;
var NNI134732 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI153, name: "key", sons: null}, 
{kind: 1, offset: "renderImpl", len: 0, typ: NTI134734, name: "renderImpl", sons: null}, 
{kind: 1, offset: "changedImpl", len: 0, typ: NTI134738, name: "changedImpl", sons: null}, 
{kind: 1, offset: "updatedImpl", len: 0, typ: NTI134743, name: "updatedImpl", sons: null}, 
{kind: 1, offset: "onAttachImpl", len: 0, typ: NTI134748, name: "onAttachImpl", sons: null}, 
{kind: 1, offset: "onDetachImpl", len: 0, typ: NTI134752, name: "onDetachImpl", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI117, name: "version", sons: null}, 
{kind: 1, offset: "renderedVersion", len: 0, typ: NTI117, name: "renderedVersion", sons: null}, 
{kind: 1, offset: "expanded", len: 0, typ: NTI134709, name: "expanded", sons: null}, 
{kind: 1, offset: "debugId", len: 0, typ: NTI117, name: "debugId", sons: null}]};
NTI134732.node = NNI134732;
NTI134732.base = NTI134718;
NTI134711.base = NTI134732;
var NNI152213 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldNode", len: 0, typ: NTI134711, name: "oldNode", sons: null}, 
{kind: 1, offset: "newNode", len: 0, typ: NTI134711, name: "newNode", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI26235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI26235, name: "current", sons: null}]};
NTI152213.node = NNI152213;
NTI160631.base = NTI152213;
NTI134678.base = NTI153;
NTI134684.base = NTI153;
var NNI152207 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI152207, name: "pkReplace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI152207, name: "pkRemove", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI152207, name: "pkAppend", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI152207, name: "pkInsertBefore", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI152207, name: "pkDetach", len: 0, sons: null}}};
NTI152207.node = NNI152207;
var NNI152209 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "k", len: 0, typ: NTI152207, name: "k", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI26235, name: "parent", sons: null}, 
{kind: 1, offset: "current", len: 0, typ: NTI26235, name: "current", sons: null}, 
{kind: 1, offset: "n", len: 0, typ: NTI134709, name: "n", sons: null}]};
NTI152209.node = NNI152209;
var NNI152211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI134709, name: "parent", sons: null}, 
{kind: 1, offset: "newChild", len: 0, typ: NTI134709, name: "newChild", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI117, name: "pos", sons: null}]};
NTI152211.node = NNI152211;
NTI135572.base = NTI153;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17430, src_17431, ti_17432) {
	var result_17855 = null;

		switch (ti_17432.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17401(ti_17432))) {
			result_17855 = src_17431;
			}
			else {
				result_17855 = [src_17431[0], src_17431[1]];
			}
			
			break;
		case 19:
			      if (dest_17430 === null || dest_17430 === undefined) {
        dest_17430 = {};
      }
      else {
        for (var key in dest_17430) { delete dest_17430[key]; }
      }
      for (var key in src_17431) { dest_17430[key] = src_17431[key]; }
      result_17855 = dest_17430;
    
			break;
		case 18:
		case 17:
			if (!((ti_17432.base == null))) {
			result_17855 = nimCopy(dest_17430, src_17431, ti_17432.base);
			}
			else {
			if ((ti_17432.kind == 17)) {
			result_17855 = (dest_17430 === null || dest_17430 === undefined) ? {m_type: ti_17432} : dest_17430;
			}
			else {
				result_17855 = (dest_17430 === null || dest_17430 === undefined) ? {} : dest_17430;
			}
			}
			nimCopyAux(result_17855, src_17431, ti_17432.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17431 === null) {
        result_17855 = null;
      }
      else {
        if (dest_17430 === null || dest_17430 === undefined) {
          dest_17430 = new Array(src_17431.length);
        }
        else {
          dest_17430.length = src_17431.length;
        }
        result_17855 = dest_17430;
        for (var i = 0; i < src_17431.length; ++i) {
          result_17855[i] = nimCopy(result_17855[i], src_17431[i], ti_17432.base);
        }
      }
    
			break;
		case 28:
			      if (src_17431 !== null) {
        result_17855 = src_17431.slice(0);
      }
    
			break;
		default: 
			result_17855 = src_17431;
			break;
		}

	return result_17855;

}

function makeNimstrLit(c_16225) {
		  var ln = c_16225.length;
  var result = new Array(ln + 1);
  var i = 0;
  for (; i < ln; ++i) {
    result[i] = c_16225.charCodeAt(i);
  }
  result[i] = 0; // terminating zero
  return result;
  

	
}

function arrayConstr(len_17916, value_17917, typ_17918) {
		    var result = new Array(len_17916);
    for (var i = 0; i < len_17916; ++i) result[i] = nimCopy(null, value_17917, typ_17918);
    return result;
  

	
}

function cstrToNimstr(c_16242) {
		  var ln = c_16242.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16242.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16242.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  

	
}

function toJSStr(s_16259) {
		  var len = s_16259.length-1;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16259[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16259[i] < 128)
      asciiPart[i] = fcc(s_16259[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_15818, ename_15819) {
		e_15818.name = ename_15819;
		if ((excHandler == 0)) {
		unhandledException(e_15818);
		}
		
		e_15818.trace = nimCopy(null, raw_write_stack_trace_15655(), NTI151);
		throw e_15818;

	
}

function chckRange(i_17954, a_17955, b_17956) {
			var Tmp1;

	var result_17957 = 0;

	BeforeRet: do {
			if (!(a_17955 <= i_17954)) Tmp1 = false; else {				Tmp1 = (i_17954 <= b_17956);			}		if (Tmp1) {
		result_17957 = i_17954;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_17957;

}

function chckIndx(i_17935, a_17936, b_17937) {
			var Tmp1;

	var result_17938 = 0;

	BeforeRet: do {
			if (!(a_17936 <= i_17935)) Tmp1 = false; else {				Tmp1 = (i_17935 <= b_17937);			}		if (Tmp1) {
		result_17938 = i_17935;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_17938;

}

function subInt(a_16621, b_16622) {
		    var result = a_16621 - b_16622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function addInt(a_16603, b_16604) {
		    var result = a_16603 + b_16604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function eqStrings(a_16454, b_16455) {
		    if (a_16454 == b_16455) return true;
    if ((!a_16454) || (!b_16455)) return false;
    var alen = a_16454.length;
    if (alen != b_16455.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_16454[i] != b_16455[i]) return false;
    return true;
  

	
}

function mulInt(a_16639, b_16640) {
		    var result = a_16639 * b_16640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
			var to_tag_134675 = nimCopy(null, ["#text", "#int", "#bool", "#vthunk", "#dthunk", "#component", "#verbatim", "HTML", "HEAD", "TITLE", "BASE", "LINK", "META", "STYLE", "SCRIPT", "NOSCRIPT", "BODY", "SECTION", "NAV", "ARTICLE", "ASIDE", "H1", "H2", "H3", "H4", "H5", "H6", "HEADER", "FOOTER", "ADDRESS", "MAIN", "P", "HR", "PRE", "BLOCKQUOTE", "OL", "UL", "LI", "DL", "DT", "DD", "FIGURE", "FIGCAPTION", "DIV", "A", "EM", "STRONG", "SMALL", "S", "CITE", "QUOTE", "DFN", "ABBR", "DATA", "TIME", "CODE", "VAR", "SAMP", "KDB", "SUB", "SUP", "I", "B", "U", "MARK", "RUBY", "RT", "RP", "BDI", "DBO", "SPAN", "BR", "WBR", "INS", "DEL", "IMG", "IFRAME", "EMBED", "OBJECT", "PARAM", "VIDEO", "AUDIO", "SOURCE", "TRACK", "CANVAS", "MAP", "AREA", "SVG", "MATH", "TABLE", "CAPTION", "COLGROUP", "COL", "TBODY", "THEAD", "TFOOT", "TR", "TD", "TH", "FORM", "FIELDSET", "LEGEND", "LABEL", "INPUT", "BUTTON", "SELECT", "DATALIST", "OPTGROUP", "OPTION", "TEXTAREA", "KEYGEN", "OUTPUT", "PROGRESS", "METER", "DETAILS", "SUMMARY", "COMMAND", "MENU"], NTI134678);
			var to_event_name_134681 = nimCopy(null, ["click", "contextmenu", "dblclick", "keyup", "keydown", "keypressed", "focus", "blur", "change", "scroll", "mousedown", "mouseenter", "mouseleave", "mousemove", "mouseout", "mouseover", "mouseup", "drag", "dragend", "dragenter", "dragleave", "dragover", "dragstart", "drop", "submit", "input", "animationstart", "animationend", "animationiteration", "keyupenter", "keyuplater"], NTI134684);

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}

function nimMin(a_16940, b_16941) {
		var Tmp1;

	var result_16942 = 0;

	BeforeRet: do {
		if ((a_16940 <= b_16941)) {
		Tmp1 = a_16940;
		}
		else {
		Tmp1 = b_16941;
		}
		
		result_16942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_16942;

}
var nimvm_7173 = false;
var nim_program_result = 0;
var global_raise_hook_13418 = [null];
var local_raise_hook_13423 = [null];
var out_of_mem_hook_13426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var gid_135472 = [0];
var object_id_139446 = [0];
var vcomponents_146027 = [{}];
var dcomponents_146041 = [{}];
var kxi_152324 = [null];
var lc_165292 = [{}];

function is_fat_pointer_17401(ti_17403) {
	var result_17404 = false;

	BeforeRet: do {
		result_17404 = !((ConstSet1[ti_17403.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17404;

}

function nimCopyAux(dest_17435, src_17436, n_17438) {
		switch (n_17438.kind) {
		case 0:
			break;
		case 1:
			      dest_17435[n_17438.offset] = nimCopy(dest_17435[n_17438.offset], src_17436[n_17438.offset], n_17438.typ);
    
			break;
		case 2:
			L1: do {
				var i_17828 = 0;
				var colontmp__17830 = 0;
				colontmp__17830 = (n_17438.len - 1);
				var res_17833 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_17833 <= colontmp__17830)) break L3;
							i_17828 = res_17833;
							nimCopyAux(dest_17435, src_17436, n_17438.sons[i_17828]);
							res_17833 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17435[n_17438.offset] = nimCopy(dest_17435[n_17438.offset], src_17436[n_17438.offset], n_17438.typ);
      for (var i = 0; i < n_17438.sons.length; ++i) {
        nimCopyAux(dest_17435, src_17436, n_17438.sons[i][1]);
      }
    
			break;
		}

	
}

function new_jarray_176639() {
	var result_176641 = null;

	var F={procname:"json.newJArray",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 176;
		result_176641 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 177;
		result_176641.kind = 6;
		F.line = 178;
		result_176641.elems = nimCopy(null, [], NTI176665);
	framePtr = F.prev;

	return result_176641;

}

function is_power_of_two_50864(x_50866) {
		var Tmp1;

	var result_50867 = false;

	BeforeRet: do {
		if (!(0 < x_50866)) Tmp1 = false; else {			Tmp1 = ((x_50866 & (x_50866 - 1)) == 0);		}		result_50867 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_50867;

}

function add_13451(x_13454, x_13454_Idx, y_13455) {
		      var len = x_13454[0].length-1;
      for (var i = 0; i < y_13455.length; ++i) {
        x_13454[0][len] = y_13455.charCodeAt(i);
        ++len;
      }
      x_13454[0][len] = 0
    

	
}

function aux_write_stack_trace_15341(f_15343) {
					var Tmp3;

	var result_15344 = [null];

		var it_15352 = f_15343;
		var i_15354 = 0;
		var total_15356 = 0;
		var temp_frames_15363 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15346);
		L1: do {
				L2: while (true) {
					if (!!((it_15352 == null))) Tmp3 = false; else {						Tmp3 = (i_15354 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15363[i_15354].Field0 = it_15352.procname;
					temp_frames_15363[i_15354].Field1 = it_15352.line;
					i_15354 += 1;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15352 == null))) break L5;
					total_15356 += 1;
					it_15352 = it_15352.prev;
				}
		} while(false);
		result_15344[0] = nimCopy(null, makeNimstrLit(""), NTI151);
		if (!((total_15356 == i_15354))) {
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_15344[0] = makeNimstrLit("(");};
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(cstrToNimstr(((total_15356 - i_15354))+"")); } else { result_15344[0] = cstrToNimstr(((total_15356 - i_15354))+"");};
		if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15344[0] = makeNimstrLit(" calls omitted) ...\x0A");};
		}
		
		L6: do {
			var j_15628 = 0;
			var colontmp__15635 = 0;
			colontmp__15635 = (i_15354 - 1);
			var res_15638 = colontmp__15635;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_15638)) break L8;
						j_15628 = res_15638;
						add_13451(result_15344, 0, temp_frames_15363[j_15628].Field0);
						if ((0 < temp_frames_15363[j_15628].Field1)) {
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_15344[0] = makeNimstrLit(", line: ");};
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(cstrToNimstr((temp_frames_15363[j_15628].Field1)+"")); } else { result_15344[0] = cstrToNimstr((temp_frames_15363[j_15628].Field1)+"");};
						}
						
						if (result_15344[0] != null) { result_15344[0] = (result_15344[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_15344[0] = makeNimstrLit("\x0A");};
						res_15638 -= 1;
					}
			} while(false);
		} while(false);

	return result_15344[0];

}

function raw_write_stack_trace_15655() {
	var result_15657 = null;

		if (!((framePtr == null))) {
		result_15657 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(aux_write_stack_trace_15341(framePtr)), NTI151);
		}
		else {
			result_15657 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI151);
		}
		

	return result_15657;

}

function unhandledException(e_15719) {
		var buf_15720 = [makeNimstrLit("")];
		if (!(((e_15719.message != null ? e_15719.message.length-1 : 0) == 0))) {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception: ");};
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(e_15719.message); } else { buf_15720[0] = e_15719.message;};
		}
		else {
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_15720[0] = makeNimstrLit("Error: unhandled exception");};
		}
		
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_15720[0] = makeNimstrLit(" [");};
		add_13451(buf_15720, 0, e_15719.name);
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_15720[0] = makeNimstrLit("]\x0A");};
		if (buf_15720[0] != null) { buf_15720[0] = (buf_15720[0].slice(0, -1)).concat(raw_write_stack_trace_15655()); } else { buf_15720[0] = raw_write_stack_trace_15655();};
		var cbuf_15801 = toJSStr(buf_15720[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_15801);
  }
  else {
    throw cbuf_15801;
  }
  

	
}

function sys_fatal_20637(message_20643) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 2802;
		var e_20645 = null;
		F.line = 2803;
		e_20645 = {m_type: NTI3863, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2804;
		e_20645.message = nimCopy(null, message_20643, NTI151);
		F.line = 2805;
		raiseException(e_20645, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20632(msg_20634) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3752;
		sys_fatal_20637(msg_20634);
	framePtr = F.prev;

	
}

function failed_assert_impl_20681(msg_20683) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 3759;
		raise_assert_20632(msg_20683);
	framePtr = F.prev;

	
}

function raiseRangeError() {
		var e_16125 = null;
		e_16125 = {m_type: NTI3875, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16125.message = nimCopy(null, makeNimstrLit("value out of range"), NTI151);
		e_16125.parent = null;
		raiseException(e_16125, "RangeError");

	
}

function init_ordered_table_176425(initial_size_176430) {
	var result_176432 = {data: null, counter: 0, first: 0, last: 0};

	var F={procname:"initOrderedTable.initOrderedTable",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		if (!(is_power_of_two_50864(initial_size_176430))) {
		F.line = 656;
		failed_assert_impl_20681(makeNimstrLit("isPowerOfTwo(initialSize) "));
		}
		
		F.line = 657;
		result_176432.counter = 0;
		F.line = 658;
		result_176432.first = -1;
		F.line = 659;
		result_176432.last = -1;
		F.line = 660;
		result_176432.data = new Array(chckRange(initial_size_176430, 0, 2147483647)); for (var i=0;i<chckRange(initial_size_176430, 0, 2147483647);++i) {result_176432.data[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}	framePtr = F.prev;

	return result_176432;

}

function new_jobject_176410() {
	var result_176412 = null;

	var F={procname:"json.newJObject",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 170;
		result_176412 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 171;
		result_176412.kind = 5;
		F.line = 172;
		nimCopy(result_176412.fields, init_ordered_table_176425(4), NTI176228);
	framePtr = F.prev;

	return result_176412;

}

function raiseIndexError() {
		var e_16155 = null;
		e_16155 = {m_type: NTI3871, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16155.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI151);
		e_16155.parent = null;
		raiseException(e_16155, "IndexError");

	
}

function raiseOverflow() {
		var e_16065 = null;
		e_16065 = {m_type: NTI3859, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16065.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI151);
		e_16065.parent = null;
		raiseException(e_16065, "OverflowError");

	
}

function HEX21HEX26_139257(h_139259, val_139260) {
	var result_139261 = 0;

	var F={procname:"hashes.!&",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 52;
		result_139261 = ((h_139259 + val_139260) >>> 0);
		F.line = 53;
		result_139261 = ((result_139261 + (result_139261 << 10)) >>> 0);
		F.line = 54;
		result_139261 = (result_139261 ^ ((result_139261 >>> 0) >>> 6));
	framePtr = F.prev;

	return result_139261;

}

function HEX21HEX24_139311(h_139313) {
	var result_139314 = 0;

	var F={procname:"hashes.!$",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 59;
		result_139314 = ((h_139313 + (h_139313 << 3)) >>> 0);
		F.line = 60;
		result_139314 = (result_139314 ^ ((result_139314 >>> 0) >>> 11));
		F.line = 61;
		result_139314 = ((result_139314 + (result_139314 << 15)) >>> 0);
	framePtr = F.prev;

	return result_139314;

}

function hash_140100(x_140102) {
	var result_140103 = 0;

	var F={procname:"hashes.hash",prev:framePtr,filename:"lib/pure/hashes.nim",line:0};
	framePtr = F;
		F.line = 132;
		var h_140104 = 0;
		L1: do {
			F.line = 133;
			var i_140116 = 0;
			F.line = 2008;
			var colontmp__140124 = 0;
			F.line = 133;
			colontmp__140124 = subInt((x_140102 != null ? x_140102.length-1 : 0), 1);
			F.line = 2011;
			var res_140127 = 0;
			L2: do {
				F.line = 2012;
					L3: while (true) {
					if (!(res_140127 <= colontmp__140124)) break L3;
						F.line = 2013;
						i_140116 = res_140127;
						F.line = 134;
						h_140104 = HEX21HEX26_139257(h_140104, x_140102[chckIndx(i_140116, 0, x_140102.length+0-1)-0]);
						F.line = 2014;
						res_140127 = addInt(res_140127, 1);
					}
			} while(false);
		} while(false);
		F.line = 135;
		result_140103 = HEX21HEX24_139311(h_140104);
	framePtr = F.prev;

	return result_140103;

}

function is_filled_142491(hcode_142493) {
	var result_142494 = false;

	var F={procname:"tables.isFilled",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 18;
		result_142494 = !((hcode_142493 == 0));
	framePtr = F.prev;

	return result_142494;

}

function next_try_142614(h_142616, max_hash_142617) {
	var result_142618 = 0;

	var F={procname:"tables.nextTry",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		F.line = 28;
		result_142618 = (addInt(h_142616, 1) & max_hash_142617);
	framePtr = F.prev;

	return result_142618;

}

function raw_get_177589(t_177595, key_177597, hc_177599, hc_177599_Idx) {
						var Tmp3;

	var result_177600 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_177599[hc_177599_Idx] = hash_140100(key_177597);
		if ((hc_177599[hc_177599_Idx] == 0)) {
		F.line = 45;
		hc_177599[hc_177599_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_177612 = (hc_177599[hc_177599_Idx] & (t_177595.data != null ? (t_177595.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_142491(t_177595.data[chckIndx(h_177612, 0, t_177595.data.length+0-1)-0].Field0)) break L2;
						if (!(t_177595.data[chckIndx(h_177612, 0, t_177595.data.length+0-1)-0].Field0 == hc_177599[hc_177599_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_177595.data[chckIndx(h_177612, 0, t_177595.data.length+0-1)-0].Field2, key_177597);						}					if (Tmp3) {
					F.line = 38;
					result_177600 = h_177612;
					break BeforeRet;
					}
					
					F.line = 39;
					h_177612 = next_try_142614(h_177612, (t_177595.data != null ? (t_177595.data.length-1) : -1));
				}
		} while(false);
		F.line = 567;
		result_177600 = subInt(-1, h_177612);
	} while (false);
	framePtr = F.prev;

	return result_177600;

}

function must_rehash_142509(length_142511, counter_142512) {
	var result_142513 = false;

	var F={procname:"tables.mustRehash",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
		if (!((counter_142512 < length_142511))) {
		F.line = 24;
		failed_assert_impl_20681(makeNimstrLit("\x0Acounter < length "));
		}
		
		F.line = 25;
		result_142513 = ((mulInt(length_142511, 2) < mulInt(counter_142512, 3)) || (subInt(length_142511, counter_142512) < 4));
	framePtr = F.prev;

	return result_142513;

}

function raw_insert_180306(t_180313, data_180317, data_180317_Idx, key_180319, val_180321, hc_180323, h_180325) {
	var F={procname:"rawInsert.rawInsert",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 64;
		data_180317[data_180317_Idx][chckIndx(h_180325, 0, data_180317[data_180317_Idx].length+0-1)-0].Field2 = nimCopy(null, key_180319, NTI151);
		F.line = 65;
		data_180317[data_180317_Idx][chckIndx(h_180325, 0, data_180317[data_180317_Idx].length+0-1)-0].Field3 = val_180321;
		F.line = 609;
		data_180317[data_180317_Idx][chckIndx(h_180325, 0, data_180317[data_180317_Idx].length+0-1)-0].Field0 = hc_180323;
		F.line = 610;
		data_180317[data_180317_Idx][chckIndx(h_180325, 0, data_180317[data_180317_Idx].length+0-1)-0].Field1 = -1;
		if ((t_180313.first < 0)) {
		F.line = 611;
		t_180313.first = h_180325;
		}
		
		if ((0 <= t_180313.last)) {
		F.line = 612;
		data_180317[data_180317_Idx][chckIndx(t_180313.last, 0, data_180317[data_180317_Idx].length+0-1)-0].Field1 = h_180325;
		}
		
		F.line = 613;
		t_180313.last = h_180325;
	framePtr = F.prev;

	
}

function enlarge_178729(t_178736) {
	var F={procname:"enlarge.enlarge",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 616;
		var n_178744 = null;
		F.line = 617;
		n_178744 = new Array(chckRange(mulInt((t_178736.data != null ? t_178736.data.length : 0), 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_178736.data != null ? t_178736.data.length : 0), 2), 0, 2147483647);++i) {n_178744[i]={Field0: 0, Field1: 0, Field2: null, Field3: null};}		F.line = 618;
		var h_178928 = t_178736.first;
		F.line = 619;
		t_178736.first = -1;
		F.line = 620;
		t_178736.last = -1;
		F.line = 621;
		var Tmp1 = t_178736.data; t_178736.data = n_178744; n_178744 = Tmp1;		L2: do {
			F.line = 622;
				L3: while (true) {
				if (!(0 <= h_178928)) break L3;
					F.line = 623;
					var nxt_179159 = n_178744[chckIndx(h_178928, 0, n_178744.length+0-1)-0].Field1;
					F.line = 624;
					var eh_179377 = n_178744[chckIndx(h_178928, 0, n_178744.length+0-1)-0].Field0;
					if (is_filled_142491(eh_179377)) {
					F.line = 626;
					var j_179386 = (eh_179377 & (t_178736.data != null ? (t_178736.data.length-1) : -1));
					L4: do {
						F.line = 627;
							L5: while (true) {
							if (!is_filled_142491(t_178736.data[chckIndx(j_179386, 0, t_178736.data.length+0-1)-0].Field0)) break L5;
								F.line = 628;
								j_179386 = next_try_142614(j_179386, (t_178736.data != null ? (t_178736.data.length-1) : -1));
							}
					} while(false);
					F.line = 629;
					raw_insert_180306(t_178736, t_178736, "data", n_178744[chckIndx(h_178928, 0, n_178744.length+0-1)-0].Field2, n_178744[chckIndx(h_178928, 0, n_178744.length+0-1)-0].Field3, n_178744[chckIndx(h_178928, 0, n_178744.length+0-1)-0].Field0, j_179386);
					}
					
					F.line = 630;
					h_178928 = nxt_179159;
				}
		} while(false);
	framePtr = F.prev;

	
}

function raw_get_known_hc_181470(t_181476, key_181478, hc_181480) {
	var result_181481 = 0;

	var F={procname:"rawGetKnownHC.rawGetKnownHC",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 31;
		var h_181490 = (hc_181480 & (t_181476.data != null ? (t_181476.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_142491(t_181476.data[chckIndx(h_181490, 0, t_181476.data.length+0-1)-0].Field0)) break L2;
					if (((t_181476.data[chckIndx(h_181490, 0, t_181476.data.length+0-1)-0].Field0 == hc_181480) && eqStrings(t_181476.data[chckIndx(h_181490, 0, t_181476.data.length+0-1)-0].Field2, key_181478))) {
					F.line = 38;
					result_181481 = h_181490;
					break BeforeRet;
					}
					
					F.line = 39;
					h_181490 = next_try_142614(h_181490, (t_181476.data != null ? (t_181476.data.length-1) : -1));
				}
		} while(false);
		F.line = 561;
		result_181481 = subInt(-1, h_181490);
	} while (false);
	framePtr = F.prev;

	return result_181481;

}

function HEX5BHEX5DHEX3D_177548(t_177555, key_177557, val_177559) {
	var F={procname:"[]=.[]=",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 97;
		var hc_177560 = [0];
		F.line = 98;
		var index_178288 = raw_get_177589(t_177555, key_177557, hc_177560, 0);
		if ((0 <= index_178288)) {
		F.line = 99;
		t_177555.data[chckIndx(index_178288, 0, t_177555.data.length+0-1)-0].Field3 = val_177559;
		}
		else {
			if (must_rehash_142509((t_177555.data != null ? t_177555.data.length : 0), t_177555.counter)) {
			F.line = 90;
			enlarge_178729(t_177555);
			F.line = 91;
			index_178288 = raw_get_known_hc_181470(t_177555, key_177557, hc_177560[0]);
			}
			
			F.line = 92;
			index_178288 = subInt(-1, index_178288);
			F.line = 93;
			raw_insert_180306(t_177555, t_177555, "data", key_177557, val_177559, hc_177560[0], index_178288);
			F.line = 100;
			t_177555.counter = addInt(t_177555.counter, 1);
		}
		
	framePtr = F.prev;

	
}

function HEX25_182370(key_vals_182376) {
	var result_182377 = null;

	var F={procname:"json.%",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((key_vals_182376 != null ? key_vals_182376.length : 0) == 0)) {
		F.line = 282;
		result_182377 = new_jarray_176639();
		break BeforeRet;
		}
		
		F.line = 283;
		result_182377 = new_jobject_176410();
		L1: do {
			F.line = 284;
			var key_182422 = null;
			F.line = 284;
			var val_182423 = null;
			F.line = 2151;
			var i_182587 = 0;
			L2: do {
				F.line = 2152;
					L3: while (true) {
					if (!(i_182587 < (key_vals_182376 != null ? key_vals_182376.length : 0))) break L3;
						F.line = 2153;
						key_182422 = key_vals_182376[chckIndx(i_182587, 0, key_vals_182376.length+0-1)-0]["Field0"];
						F.line = 2153;
						val_182423 = key_vals_182376[chckIndx(i_182587, 0, key_vals_182376.length+0-1)-0]["Field1"];
						F.line = 284;
						HEX5BHEX5DHEX3D_177548(result_182377.fields, key_182422, val_182423);
						F.line = 2154;
						i_182587 = addInt(i_182587, 1);
					}
			} while(false);
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_182377;

}

function HEX25_182266(s_182268) {
	var result_182269 = null;

	var F={procname:"json.%",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 258;
		result_182269 = {kind: 0, str: null, num: 0, fnum: 0.0, bval: false, fields: {data: null, counter: 0, first: 0, last: 0}, elems: null};
		F.line = 259;
		result_182269.kind = 4;
		F.line = 260;
		result_182269.str = nimCopy(null, s_182268, NTI151);
	framePtr = F.prev;

	return result_182269;

}

function add_177006(father_177008, child_177009) {
	var F={procname:"json.add",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		if (!((father_177008.kind == 6))) {
		F.line = 248;
		failed_assert_impl_20681(makeNimstrLit("father.kind == JArray "));
		}
		
		F.line = 249;
		if (father_177008.elems != null) { father_177008.elems.push(child_177009); } else { father_177008.elems = [child_177009]; };
	framePtr = F.prev;

	
}

function HEX25_204050(elements_204055) {
	var result_204056 = null;

	var F={procname:"%.%",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		F.line = 290;
		result_204056 = new_jarray_176639();
		L1: do {
			F.line = 291;
			var elem_204064 = null;
			F.line = 2151;
			var i_204069 = 0;
			L2: do {
				F.line = 2152;
					L3: while (true) {
					if (!(i_204069 < (elements_204055 != null ? elements_204055.length : 0))) break L3;
						F.line = 2153;
						elem_204064 = elements_204055[chckIndx(i_204069, 0, elements_204055.length+0-1)-0];
						F.line = 291;
						add_177006(result_204056, elem_204064);
						F.line = 2154;
						i_204069 = addInt(i_204069, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_204056;

}
var cont_204478 = [HEX25_182370([{Field0: makeNimstrLit("default-lang"), Field1: HEX25_182266(makeNimstrLit("en"))}, {Field0: makeNimstrLit("en"), Field1: HEX25_182370([{Field0: makeNimstrLit("lang-title"), Field1: HEX25_182266(makeNimstrLit("Language"))}, {Field0: makeNimstrLit("langs"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("en"), Field1: HEX25_182266(makeNimstrLit("English"))}]), HEX25_182370([{Field0: makeNimstrLit("es"), Field1: HEX25_182266(makeNimstrLit("Spanish"))}])])}, {Field0: makeNimstrLit("page_title"), Field1: HEX25_182266(makeNimstrLit("Collective Data Trust"))}, {Field0: makeNimstrLit("sections"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Why"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("images"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("img/guy-data.svg"))])}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("Imagine that someone could pay you just for existing, and sharing some information about your existence.")), HEX25_182266(makeNimstrLit("Your data is your asset, because it has value and is used in transactions that moves the information economy.")), HEX25_182266(makeNimstrLit("Internet and Machines exist because of us, and we should have a say on the evolution of both.")), HEX25_182266(makeNimstrLit("This is not about the money made out of your data with no benefit for you. This is about the decisions that affects you as the user.")), HEX25_182266(makeNimstrLit("We don\xE2\x80\x99t want to give up to our lifestyle and needs, just to protect our data. What we want is full control and ownership.")), HEX25_182266(makeNimstrLit("This is not an issue of policies and regulations, this is an issue of CONTROL and OWNERSHIP."))])}]), HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("What"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("images"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("img/data-found.svg")), HEX25_182266(makeNimstrLit("img/complete-monetization.svg"))])}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("This is The Collective Data Trust.")), HEX25_182266(makeNimstrLit("We are a community of internet users where we understand the importance of Artificial Intelligence development, and the urgency of better Data Management and Monetization practices, so we have created the Collective Data Trust (CDT).")), HEX25_182266(makeNimstrLit("Collective Data Trust allows you to become owner of the company that monetizes your data.")), HEX25_182266(makeNimstrLit("The Trust allows its Beneficiaries to take advantage from any monetization process that occurs involving his data while having full control about which data is to be used, how it will be used, and by whom.")), HEX25_182266(makeNimstrLit("The Beneficiary\'s account is integrated by a Data-as-an-asset portfolio, through a collaborative model for Artificial Intelligence development and Collective Data Monetization.")), HEX25_182266(makeNimstrLit("Collective Data Trust is a fiduciary entity, legally established under the State of Delaware, with registration No. 6855308, and by which, once you sign in, you become a beneficial owner proportionally to your own asset integration. By becoming a Beneficiary of the Trust, the USER is turned into an OWNER"))])}]), HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("How"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("images"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("img/data-money.svg")), HEX25_182266(makeNimstrLit("img/info-economy.svg"))])}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("CDT looks to contribute with a universal basic income, but instead of hopping for some social justice or claiming over economics rights, we take the system as it is, and we look for ways to make it happen.")), HEX25_182266(makeNimstrLit("CDT focuses on the possibility that Data has to produce income to its beneficiaries.")), HEX25_182266(makeNimstrLit("By signing in, all internet users can now become owners of the company that monetizes their data.")), HEX25_182266(makeNimstrLit("By Monetization we refer to processes aligned to our mission, that will create and increase the value of the collective data, through products development, or through direct monetization and applied services like marketing and research. Once you have signed in, you are no longer just an user, you are the owner.")), HEX25_182266(makeNimstrLit("Once the owners accumulates a critical mass of data into the collective digital assets, the Trust, can optimize monetization process and start giving tangible results to the owners.")), HEX25_182266(makeNimstrLit("At the same time, this mass of data will be used to train and enhance artificial intelligence powered services and products, that will be at the service of the beneficiaries and under the individual control of each of them.")), HEX25_182266(makeNimstrLit("The Collective Data Monetization System is where we secure a private and safe environment for a user-based, data-centric distributed economy, beneficial to all its participants.")), HEX25_182266(makeNimstrLit("Each beneficiary can participate in different ways:")), HEX25_182266(makeNimstrLit("Passive monetization:")), HEX25_182266(makeNimstrLit("You choose what you will like to share, and we will create value out of it.")), HEX25_182266(makeNimstrLit("Active Monetization:")), HEX25_182266(makeNimstrLit("Teach the machine, answer paid questions, participate in rewarded research campaigns, and sell specifically demanded data, under your own terms."))])}])])}, {Field0: makeNimstrLit("documentation"), Field1: HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Documentation"))}, {Field0: makeNimstrLit("items"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check the concept of Public Collectively Owned Property here, on "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/CDT-PubliCOw-SP.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Short Paper"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check the legal foundations of the Community here, on "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/CDT-DeclarationOfTrust.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Declaration of Trust"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check how we have built a data-as-an-asset monetization unit here, on "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/Class-I-Personal-Beneficial-Unit-Series.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Constitution of Class: Personal Beneficial Unit"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Edit discuss and fork in "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://github.com/CollectiveDataTrust/contracts"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit(" GitHub"))}])])}, {Field0: makeNimstrLit("collaborate"), Field1: HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Colaborate"))}, {Field0: makeNimstrLit("items"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("volunteer"), Field1: HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Volunteer"))}, {Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("We are fully loaded with work, and we welcome all proactive members of the community who would like to participate and get involved in the development of CDT."))}, {Field0: makeNimstrLit("links"), Field1: HEX25_204050([new_jobject_176410()])}])}])])}])}])}, {Field0: makeNimstrLit("es"), Field1: HEX25_182370([{Field0: makeNimstrLit("lang-title"), Field1: HEX25_182266(makeNimstrLit("Idioma"))}, {Field0: makeNimstrLit("langs"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("en"), Field1: HEX25_182266(makeNimstrLit("Ingles"))}]), HEX25_182370([{Field0: makeNimstrLit("es"), Field1: HEX25_182266(makeNimstrLit("Espa\xC3\xB1ol"))}])])}, {Field0: makeNimstrLit("page_title"), Field1: HEX25_182266(makeNimstrLit("Collective Data Trust"))}, {Field0: makeNimstrLit("label"), Field1: HEX25_182266(makeNimstrLit("Espa\xC3\xB1ol"))}, {Field0: makeNimstrLit("sections"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Por qu\xC3\xA9"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("image"), Field1: HEX25_182266(makeNimstrLit("img/1.jpg"))}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("Imag\xC3\xADnate que alguien pudiera pagarte tan solo por existir y compartir informaci\xC3\xB3n respecto a tu existencia.")), HEX25_182266(makeNimstrLit("Tus datos son tus activos, porque tienen un valor, que se usa en transacciones, que mueven la econom\xC3\xADa de la informaci\xC3\xB3n.")), HEX25_182266(makeNimstrLit("Nosotros somos la raz\xC3\xB3n de existir para el internet y las m\xC3\xA1quinas, deber\xC3\xADamos poder opinar sobre la evoluci\xC3\xB3n de ambos.")), HEX25_182266(makeNimstrLit("No se trata del dinero que tus datos producen sin darte ning\xC3\xBAn beneficio. Se trata de las decisiones que te afectan como usuario.")), HEX25_182266(makeNimstrLit("Nosotros no queremos renunciar a nuestro estilo de vida y nuestras necesidad, solo para proteger nuestros datos. Lo que queremos es control total sobre nuestra propiedad.")), HEX25_182266(makeNimstrLit("Este no es un asunto de pol\xC3\xADticas y regulaciones, este es un asunto de CONTROL y PROPIEDAD"))])}]), HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Qu\xC3\xA9"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("image"), Field1: HEX25_182266(makeNimstrLit("img/2.jpg"))}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("Esto es Collective Data Trust, un fideicomiso colectivo de datos.")), HEX25_182266(makeNimstrLit("Somos una comunidad de usuarios de internet, donde entendemos la importancia del desarrollo seguro de la inteligencia y artificial, y la urgencia de mejores pr\xC3\xA1cticas en cuanto a manejo de datos y monetizaci\xC3\xB3n, y por eso hemos creado el Fideicomiso Colectivo de Datos (CDT).")), HEX25_182266(makeNimstrLit("Collective Data Trust te permite convertirte en propietario de la empresa que monetiza tus datos.")), HEX25_182266(makeNimstrLit("El Fideicomiso le permite a sus beneficiario poder aprovechar cualquier proceso de monetizaci\xC3\xB3n que ocurra en relaci\xC3\xB3n a sus datos, mientras conserva el absoluto control sobre qu\xC3\xA9 datos ser\xC3\xA1n utilizados, como ser\xC3\xA1n monetizados y qui\xC3\xA9n tendr\xC3\xA1 acceso a ellos."))])}]), HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("C\xC3\xB3mo"))}, {Field0: makeNimstrLit("type"), Field1: HEX25_182266(makeNimstrLit("text"))}, {Field0: makeNimstrLit("image"), Field1: HEX25_182266(makeNimstrLit("img/3.jpg"))}, {Field0: makeNimstrLit("contents"), Field1: HEX25_204050([HEX25_182266(makeNimstrLit("CDT busca contribuir con un ingreso b\xC3\xA1sico universal, pero de apuntar a alguna justicia social, o de reclamar derechos socio-econ\xC3\xB3micos, nosotros tomamos las cosas tal y como son, y nos enfocamos en la capacidad que tienen los datos, de generar ingresos para sus propietarios.")), HEX25_182266(makeNimstrLit("Con registrarse, ahora todos los usuarios de internet podemos convertirnos en propietarios de las empresas que monetizan nuestros datos.")), HEX25_182266(makeNimstrLit("Por \xE2\x80\x9CMonetizaci\xC3\xB3n\xE2\x80\x9D nos referimos a procesos que est\xC3\xA1n alineados a nuestra misi\xC3\xB3n, que  crear\xC3\xA1n y aumentaran el valor del colectivo de datos, a trav\xC3\xA9s del desarrollo de productos o de la monetizaci\xC3\xB3n directa en servicios aplicados a \xC3\xA1reas como el marketing. ")), HEX25_182266(makeNimstrLit("Una vez que los Beneficiarios acumulan un masa cr\xC3\xADtica de datos dentro de sus activos digitales, el fideicomiso puede optimizar los procesos de monetizaci\xC3\xB3n, de manera a generar resultados tangibles para sus beneficiarios.")), HEX25_182266(makeNimstrLit("Al mismo tiempo, esta masa de datos ser\xC3\xA1 utilizada para entrenar y mejorar servicios y productos basados en inteligencia artificial, que estar\xC3\xA1n al servicio de los beneficiarios, bajo control individual de cada uno."))])}])])}, {Field0: makeNimstrLit("documentation"), Field1: HEX25_182370([{Field0: makeNimstrLit("title"), Field1: HEX25_182266(makeNimstrLit("Documentaci\xC3\xB3n"))}, {Field0: makeNimstrLit("items"), Field1: HEX25_204050([HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check the concept of Public Collectively Owned Property here, on "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/CDT-PubliCOw-SP.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Short Paper"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check the legal foundations of the Community here, on "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/CDT-DeclarationOfTrust.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Declaration of Trust"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Check how we have built a data-as-an-asset monetization unit here, on"))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://www.collectivedatatrust.com/Class-I-Personal-Beneficial-Unit-Series.pdf"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit("Constitution of Class: Personal Beneficial Unit"))}]), HEX25_182370([{Field0: makeNimstrLit("text"), Field1: HEX25_182266(makeNimstrLit("Edit discuss and fork in "))}, {Field0: makeNimstrLit("link"), Field1: HEX25_182266(makeNimstrLit("https://github.com/CollectiveDataTrust/contracts"))}, {Field0: makeNimstrLit("link-label"), Field1: HEX25_182266(makeNimstrLit(" GitHub"))}])])}])}])}])}])];

function get_str_176679(n_176681, default_176682) {
			var Tmp1;

	var result_176683 = null;

	var F={procname:"json.getStr",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if ((n_176681 === null)) Tmp1 = true; else {				Tmp1 = !((n_176681.kind == 4));			}		if (Tmp1) {
		F.line = 184;
		result_176683 = nimCopy(null, default_176682, NTI151);
		break BeforeRet;
		}
		else {
			F.line = 185;
			result_176683 = nimCopy(null, n_176681.str, NTI151);
			break BeforeRet;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_176683;

}

function raw_get_185759(t_185764, key_185766, hc_185768, hc_185768_Idx) {
						var Tmp3;

	var result_185769 = 0;

	var F={procname:"rawGet.rawGet",prev:framePtr,filename:"lib/pure/collections/tableimpl.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 43;
		hc_185768[hc_185768_Idx] = hash_140100(key_185766);
		if ((hc_185768[hc_185768_Idx] == 0)) {
		F.line = 45;
		hc_185768[hc_185768_Idx] = 314159265;
		}
		
		F.line = 31;
		var h_185781 = (hc_185768[hc_185768_Idx] & (t_185764.data != null ? (t_185764.data.length-1) : -1));
		L1: do {
			F.line = 32;
				L2: while (true) {
				if (!is_filled_142491(t_185764.data[chckIndx(h_185781, 0, t_185764.data.length+0-1)-0].Field0)) break L2;
						if (!(t_185764.data[chckIndx(h_185781, 0, t_185764.data.length+0-1)-0].Field0 == hc_185768[hc_185768_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_185764.data[chckIndx(h_185781, 0, t_185764.data.length+0-1)-0].Field2, key_185766);						}					if (Tmp3) {
					F.line = 38;
					result_185769 = h_185781;
					break BeforeRet;
					}
					
					F.line = 39;
					h_185781 = next_try_142614(h_185781, (t_185764.data != null ? (t_185764.data.length-1) : -1));
				}
		} while(false);
		F.line = 75;
		result_185769 = subInt(-1, h_185781);
	} while (false);
	framePtr = F.prev;

	return result_185769;

}

function HEX5BHEX5D_185744(t_185751, key_185753) {
	var result_185755 = [null, 0];
	var result_185755_Idx = 0;

	var F={procname:"[].[]",prev:framePtr,filename:"lib/pure/collections/tables.nim",line:0};
	framePtr = F;
		F.line = 146;
		var hc_185757 = [0];
		F.line = 147;
		var index_186458 = raw_get_185759(t_185751, key_185753, hc_185757, 0);
		if ((0 <= index_186458)) {
		F.line = 148;
		result_185755 = t_185751.data[chckIndx(index_186458, 0, t_185751.data.length+0-1)-0]; result_185755_Idx = "Field3";
		}
		else {
			F.line = 151;
			F.line = 2782;
			var e_186807 = null;
			F.line = 2783;
			e_186807 = {m_type: NTI3867, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
			F.line = 2784;
			e_186807.message = nimCopy(null, (makeNimstrLit("key not found: ").slice(0,-1)).concat(key_185753), NTI151);
			F.line = 2785;
			e_186807.parent = null;
			raiseException(e_186807, "KeyError");
		}
		
	framePtr = F.prev;

	return [result_185755, result_185755_Idx];

}

function HEX5BHEX5D_187196(node_187198, name_187199) {
		var Tmp1;

	var result_187200 = null;

	var F={procname:"json.[]",prev:framePtr,filename:"lib/pure/json.nim",line:0};
	framePtr = F;
		if (!(!((node_187198 === null)))) {
		F.line = 425;
		failed_assert_impl_20681(makeNimstrLit("not isNil(node) "));
		}
		
		if (!((node_187198.kind == 5))) {
		F.line = 426;
		failed_assert_impl_20681(makeNimstrLit("node.kind == JObject "));
		}
		
		F.line = 429;
		result_187200 = (Tmp1 = HEX5BHEX5D_185744(node_187198.fields, name_187199), Tmp1[0])[Tmp1[1]];
	framePtr = F.prev;

	return result_187200;

}
var lang_208015 = [get_str_176679(HEX5BHEX5D_187196(cont_204478[0], makeNimstrLit("default-lang")), makeNimstrLit(""))];
var c_208029 = [HEX5BHEX5D_187196(cont_204478[0], lang_208015[0])];

function new_seq_160527(len_160531) {
	var result_160533 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 700;
		result_160533 = new Array(len_160531); for (var i=0;i<len_160531;++i) {result_160533[i]={k: 0, parent: null, current: null, n: null};}	framePtr = F.prev;

	return result_160533;

}

function new_seq_160579(len_160583) {
	var result_160585 = null;

	var F={procname:"newSeq.newSeq",prev:framePtr,filename:"lib/system.nim",line:0};
	framePtr = F;
		F.line = 700;
		result_160585 = new Array(len_160583); for (var i=0;i<len_160583;++i) {result_160585[i]={parent: null, newChild: null, pos: 0};}	framePtr = F.prev;

	return result_160585;

}

function valueHEX3D_134830(n_134832, v_134833) {
	var F={procname:"vdom.value=",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 156;
		n_134832.text = v_134833;
	framePtr = F.prev;

	
}

function value_134813(n_134815) {
	var result_134816 = null;

	var F={procname:"vdom.value",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 155;
		result_134816 = n_134815.text;
	framePtr = F.prev;

	return result_134816;

}

function wrap_event_152377(d_152379, n_152380, k_152381, action_152382) {

			function later_wrapper_152830() {

					function HEX3Aanonymous_152836(ev_152838) {

							function wrapper_152839() {
								var F={procname:":anonymous.wrapper",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
								framePtr = F;
									F.line = 72;
									var v_152844 = ev_152838.target.value;
									F.line = 73;
									valueHEX3D_134830(n_152834, v_152844);
									if (!(!((action_152833 == null)))) {
									F.line = 74;
									failed_assert_impl_20681(makeNimstrLit("\x0Anot (action == nil) "));
									}
									
									F.line = 75;
									action_152833(ev_152838, n_152834);
									if (!((value_134813(n_152834) == v_152844))) {
									F.line = 77;
									ev_152838.target.value = value_134813(n_152834);
									}
									
								framePtr = F.prev;

								
							}

						var F={procname:"laterWrapper.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
						framePtr = F;
							if (!((timer_152835 == null))) {
							F.line = 103;
							clearTimeout(timer_152835);
							}
							
							F.line = 104;
							timer_152835 = setTimeout(wrapper_152839, 400);
						framePtr = F.prev;

						
					}

				var result_152832 = null;

				var F={procname:"wrapEvent.laterWrapper",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 98;
					var action_152833 = action_152382;
					F.line = 99;
					var n_152834 = n_152380;
					F.line = 100;
					var timer_152835 = null;
					F.line = 101;
					result_152832 = HEX3Aanonymous_152836;
				framePtr = F.prev;

				return result_152832;

			}

			function enter_wrapper_152629() {

					function HEX3Aanonymous_152634(ev_152636) {
						var F={procname:"enterWrapper.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
						framePtr = F;
							if ((ev_152636.keyCode == 13)) {
							F.line = 72;
							var v_152640 = ev_152636.target.value;
							F.line = 73;
							valueHEX3D_134830(n_152633, v_152640);
							if (!(!((action_152632 == null)))) {
							F.line = 74;
							failed_assert_impl_20681(makeNimstrLit("\x0Anot (action == nil) "));
							}
							
							F.line = 75;
							action_152632(ev_152636, n_152633);
							if (!((value_134813(n_152633) == v_152640))) {
							F.line = 77;
							ev_152636.target.value = value_134813(n_152633);
							}
							
							}
							
						framePtr = F.prev;

						
					}

				var result_152631 = null;

				var F={procname:"wrapEvent.enterWrapper",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 92;
					var action_152632 = action_152382;
					F.line = 93;
					var n_152633 = n_152380;
					F.line = 94;
					result_152631 = HEX3Aanonymous_152634;
				framePtr = F.prev;

				return result_152631;

			}

			function std_wrapper_152384() {

					function HEX3Aanonymous_152389(ev_152391) {
								var Tmp1;
								var Tmp2;

						var F={procname:"stdWrapper.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
						framePtr = F;
								if ((n_152388.kind == 109)) Tmp2 = true; else {									Tmp2 = (n_152388.kind == 103);								}								if (Tmp2) Tmp1 = true; else {									Tmp1 = (n_152388.kind == 105);								}							if (Tmp1) {
							F.line = 72;
							var v_152422 = ev_152391.target.value;
							F.line = 73;
							valueHEX3D_134830(n_152388, v_152422);
							if (!(!((action_152387 == null)))) {
							F.line = 74;
							failed_assert_impl_20681(makeNimstrLit("\x0Anot (action == nil) "));
							}
							
							F.line = 75;
							action_152387(ev_152391, n_152388);
							if (!((value_134813(n_152388) == v_152422))) {
							F.line = 77;
							ev_152391.target.value = value_134813(n_152388);
							}
							
							}
							else {
								F.line = 89;
							action_152387(ev_152391, n_152388);
							}
							
						framePtr = F.prev;

						
					}

				var result_152386 = null;

				var F={procname:"wrapEvent.stdWrapper",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
				framePtr = F;
					F.line = 84;
					var action_152387 = action_152382;
					F.line = 85;
					var n_152388 = n_152380;
					F.line = 86;
					result_152386 = HEX3Aanonymous_152389;
				framePtr = F.prev;

				return result_152386;

			}

	var result_152383 = null;

	var F={procname:"karax.wrapEvent",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 106;
		switch (k_152381) {
		case 30:
			F.line = 108;
			result_152383 = later_wrapper_152830();
			F.line = 109;
			d_152379.addEventListener("keyup", result_152383, false);
			break;
		case 29:
			F.line = 111;
			result_152383 = enter_wrapper_152629();
			F.line = 112;
			d_152379.addEventListener("keyup", result_152383, false);
			break;
		default: 
			F.line = 114;
			result_152383 = std_wrapper_152384();
			F.line = 115;
			d_152379.addEventListener(to_event_name_134681[chckIndx(k_152381, 0, to_event_name_134681.length+0-1)-0], result_152383, false);
			break;
		}
	framePtr = F.prev;

	return result_152383;

}

function apply_events_153078(n_153080, kxi_153081) {
	var F={procname:"karax.applyEvents",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 127;
		var dest_153082 = n_153080.dom;
		L1: do {
			F.line = 128;
			var i_153099 = 0;
			F.line = 3499;
			var colontmp__153101 = 0;
			F.line = 128;
			colontmp__153101 = (n_153080.events != null ? n_153080.events.length : 0);
			F.line = 3500;
			var i_153104 = 0;
			L2: do {
				F.line = 3501;
					L3: while (true) {
					if (!(i_153104 < colontmp__153101)) break L3;
						F.line = 3502;
						i_153099 = i_153104;
						F.line = 129;
						n_153080.events[chckIndx(i_153099, 0, n_153080.events.length+0-1)-0]["Field2"] = wrap_event_152377(dest_153082, n_153080, n_153080.events[chckIndx(i_153099, 0, n_153080.events.length+0-1)-0]["Field0"], n_153080.events[chckIndx(i_153099, 0, n_153080.events.length+0-1)-0]["Field1"]);
						F.line = 3503;
						i_153104 = addInt(i_153104, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function apply_style_41027(n_41029, s_41030) {
	var F={procname:"vstyles.applyStyle",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vstyles.nim",line:0};
	framePtr = F;
		F.line = 299;
		n_41029.style = {};
		L1: do {
			F.line = 300;
			var i_41228 = 0;
			F.line = 1992;
			var colontmp__41262 = 0;
			F.line = 300;
			colontmp__41262 = subInt(s_41030.length, 1);
			F.line = 1998;
			var res_41265 = 0;
			L2: do {
				F.line = 1999;
					L3: while (true) {
					if (!(res_41265 <= colontmp__41262)) break L3;
						F.line = 2000;
						i_41228 = res_41265;
						F.line = 301;
						n_41029.style[s_41030[i_41228]] = s_41030[addInt(i_41228, 1)];
						F.line = 2001;
						res_41265 = addInt(res_41265, 2);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	
}

function vnode_to_dom_153178(n_153180, kxi_153181) {
			var Tmp9;

	var result_153182 = null;

	var F={procname:"karax.vnodeToDom",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((n_153180.kind == 0)) {
		F.line = 139;
		result_153182 = document.createTextNode(n_153180.text);
		F.line = 123;
		n_153180.dom = result_153182;
		if (!((n_153180.id == null))) {
		F.line = 124;
		kxi_152324[0].byId[n_153180.id] = n_153180;
		}
		
		}
		else {
		if ((n_153180.kind == 6)) {
		F.line = 142;
		result_153182 = document.createElement("div");
		F.line = 143;
		result_153182.innerHTML = n_153180.text;
		F.line = 123;
		n_153180.dom = result_153182;
		if (!((n_153180.id == null))) {
		F.line = 124;
		kxi_152324[0].byId[n_153180.id] = n_153180;
		}
		
		F.line = 145;
		break BeforeRet;
		}
		else {
		if ((n_153180.kind == 3)) {
		F.line = 147;
		var x_153265 = vcomponents_146027[0][n_153180.text](n_153180.kids);
		F.line = 148;
		result_153182 = vnode_to_dom_153178(x_153265, kxi_153181);
		F.line = 123;
		n_153180.dom = result_153182;
		if (!((n_153180.id == null))) {
		F.line = 124;
		kxi_152324[0].byId[n_153180.id] = n_153180;
		}
		
		F.line = 151;
		break BeforeRet;
		}
		else {
		if ((n_153180.kind == 4)) {
		F.line = 153;
		result_153182 = dcomponents_146041[0][n_153180.text](n_153180.kids);
		F.line = 123;
		n_153180.dom = result_153182;
		if (!((n_153180.id == null))) {
		F.line = 124;
		kxi_152324[0].byId[n_153180.id] = n_153180;
		}
		
		F.line = 156;
		break BeforeRet;
		}
		else {
		if ((n_153180.kind == 5)) {
		F.line = 158;
		var x_153339 = n_153180;
		if (!((x_153339.onAttachImpl == null))) {
		F.line = 159;
		x_153339.onAttachImpl(x_153339);
		}
		
		if (!(!((x_153339.renderImpl == null)))) {
		F.line = 160;
		failed_assert_impl_20681(makeNimstrLit("\x0Anot (x.renderImpl == nil) "));
		}
		
		if ((x_153339.expanded == null)) {
		F.line = 162;
		x_153339.expanded = x_153339.renderImpl(x_153339);
		}
		
		if (!(!((x_153339.expanded == null)))) {
		F.line = 164;
		failed_assert_impl_20681(makeNimstrLit("\x0Anot (x.expanded == nil) "));
		}
		
		F.line = 165;
		result_153182 = vnode_to_dom_153178(x_153339.expanded, kxi_153181);
		F.line = 123;
		n_153180.dom = result_153182;
		if (!((n_153180.id == null))) {
		F.line = 124;
		kxi_152324[0].byId[n_153180.id] = n_153180;
		}
		
		F.line = 167;
		break BeforeRet;
		}
		else {
			F.line = 169;
			result_153182 = document.createElement(to_tag_134675[chckIndx(n_153180.kind, 0, to_tag_134675.length+0-1)-0]);
			F.line = 123;
			n_153180.dom = result_153182;
			if (!((n_153180.id == null))) {
			F.line = 124;
			kxi_152324[0].byId[n_153180.id] = n_153180;
			}
			
			L1: do {
				F.line = 171;
				var k_153639 = null;
				L2: do {
					F.line = 282;
					var i_153670 = 0;
					F.line = 3499;
					var colontmp__153672 = 0;
					F.line = 282;
					colontmp__153672 = (n_153180.kids != null ? n_153180.kids.length : 0);
					F.line = 3500;
					var i_153674 = 0;
					L3: do {
						F.line = 3501;
							L4: while (true) {
							if (!(i_153674 < colontmp__153672)) break L4;
								F.line = 3502;
								i_153670 = i_153674;
								F.line = 282;
								k_153639 = n_153180.kids[chckIndx(i_153670, 0, n_153180.kids.length+0-1)-0];
								F.line = 172;
								result_153182.appendChild(vnode_to_dom_153178(k_153639, kxi_153181));
								F.line = 3503;
								i_153674 = addInt(i_153674, 1);
							}
					} while(false);
				} while(false);
			} while(false);
			if (!((n_153180.text == null))) {
			F.line = 175;
			result_153182.value = n_153180.text;
			}
			
		}
		}}}}
		if (!((n_153180.id == null))) {
		F.line = 177;
		result_153182.id = n_153180.id;
		}
		
		if (!((n_153180.class == null))) {
		F.line = 179;
		result_153182.className = n_153180.class;
		}
		
		L5: do {
			F.line = 182;
			var k_153640 = null;
			F.line = 182;
			var v_153641 = null;
			L6: do {
				F.line = 285;
				var i_153679 = 0;
				F.line = 1992;
				var colontmp__153681 = 0;
				F.line = 285;
				colontmp__153681 = subInt((n_153180.attrs != null ? n_153180.attrs.length : 0), 2);
				F.line = 1998;
				var res_153683 = 0;
				L7: do {
					F.line = 1999;
						L8: while (true) {
						if (!(res_153683 <= colontmp__153681)) break L8;
							F.line = 2000;
							i_153679 = res_153683;
							F.line = 286;
							k_153640 = n_153180.attrs[chckIndx(i_153679, 0, n_153180.attrs.length+0-1)-0];
							F.line = 286;
							v_153641 = n_153180.attrs[chckIndx(addInt(i_153679, 1), 0, n_153180.attrs.length+0-1)-0];
							if (!((v_153641 == null))) {
							F.line = 184;
							result_153182.setAttribute(k_153640, v_153641);
							}
							
							F.line = 2001;
							res_153683 = addInt(res_153683, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 185;
		apply_events_153078(n_153180, kxi_153181);
			if (!(n_153180 == kxi_153181.toFocusV)) Tmp9 = false; else {				Tmp9 = (kxi_153181.toFocus === null);			}		if (Tmp9) {
		F.line = 187;
		kxi_153181.toFocus = result_153182;
		}
		
		if (!((n_153180.style === null))) {
		F.line = 188;
		apply_style_41027(result_153182, n_153180.style);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_153182;

}

function replace_by_id_153824(id_153826, new_tree_153827) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 212;
		var x_153828 = document.getElementById(id_153826);
		F.line = 213;
		x_153828.parentNode.replaceChild(new_tree_153827, x_153828);
		F.line = 214;
		new_tree_153827.id = id_153826;
	framePtr = F.prev;

	
}

function len_135717(x_135719) {
	var result_135720 = 0;

	var F={procname:"vdom.len",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 246;
		result_135720 = (x_135719.kids != null ? x_135719.kids.length : 0);
	framePtr = F.prev;

	return result_135720;

}

function HEX5BHEX5D_135741(x_135743, idx_135744) {
	var result_135745 = null;

	var F={procname:"vdom.[]",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 247;
		result_135745 = x_135743.kids[chckIndx(idx_135744, 0, x_135743.kids.length+0-1)-0];
	framePtr = F.prev;

	return result_135745;

}

function same_153701(n_153703, e_153704, nesting_153705) {
			var Tmp1;
			var Tmp2;

	var result_153707 = false;

	var F={procname:"karax.same",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (kxi_152324[0].orphans.hasOwnProperty(n_153703.id)) {
		F.line = 191;
		result_153707 = true;
		break BeforeRet;
		}
		
		if ((n_153703.kind == 5)) {
		F.line = 193;
		result_153707 = same_153701(n_153703.expanded, e_153704, addInt(nesting_153705, 1));
		}
		else {
		if ((n_153703.kind == 6)) {
		F.line = 195;
		result_153707 = true;
		}
		else {
			if ((n_153703.kind == 3)) Tmp1 = true; else {				Tmp1 = (n_153703.kind == 4);			}		if (Tmp1) {
		F.line = 198;
		result_153707 = true;
		}
		else {
		if ((to_tag_134675[chckIndx(n_153703.kind, 0, to_tag_134675.length+0-1)-0] == e_153704.nodeName)) {
		F.line = 200;
		result_153707 = true;
		if (!((n_153703.kind == 0))) {
			if (!!((e_153704.childNodes.length == len_135717(n_153703)))) Tmp2 = false; else {				Tmp2 = !((n_153703.kind == 109));			}		if (Tmp2) {
		F.line = 204;
		rawEcho(makeNimstrLit("expected "), cstrToNimstr((len_135717(n_153703))+""), makeNimstrLit(" real "), cstrToNimstr((e_153704.childNodes.length)+""), makeNimstrLit(" "), cstrToNimstr(to_tag_134675[chckIndx(n_153703.kind, 0, to_tag_134675.length+0-1)-0]), makeNimstrLit(" nesting "), cstrToNimstr((nesting_153705)+""));
		F.line = 205;
		result_153707 = false;
		break BeforeRet;
		}
		
		L3: do {
			F.line = 206;
			var i_153800 = 0;
			F.line = 3499;
			var colontmp__153806 = 0;
			F.line = 206;
			colontmp__153806 = len_135717(n_153703);
			F.line = 3500;
			var i_153809 = 0;
			L4: do {
				F.line = 3501;
					L5: while (true) {
					if (!(i_153809 < colontmp__153806)) break L5;
						F.line = 3502;
						i_153800 = i_153809;
						if (!(same_153701(HEX5BHEX5D_135741(n_153703, i_153800), e_153704.childNodes[i_153800], addInt(nesting_153705, 1)))) {
						F.line = 207;
						result_153707 = false;
						break BeforeRet;
						}
						
						F.line = 3503;
						i_153809 = addInt(i_153809, 1);
					}
			} while(false);
		} while(false);
		}
		
		}
		else {
			F.line = 209;
		rawEcho(makeNimstrLit("VDOM: "), cstrToNimstr(to_tag_134675[chckIndx(n_153703.kind, 0, to_tag_134675.length+0-1)-0]), makeNimstrLit(" DOM: "), cstrToNimstr(e_153704.nodeName));
		}
		}}}
	} while (false);
	framePtr = F.prev;

	return result_153707;

}

function eq_39801(a_39803, b_39804) {
	var result_39805 = false;

	var F={procname:"vstyles.eq",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vstyles.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((a_39803 === null)) {
		if ((b_39804 === null)) {
		F.line = 229;
		result_39805 = true;
		break BeforeRet;
		}
		else {
			F.line = 230;
			result_39805 = false;
			break BeforeRet;
		}
		
		}
		else {
		if ((b_39804 === null)) {
		F.line = 231;
		result_39805 = false;
		break BeforeRet;
		}
		}
		if (!((a_39803.length == b_39804.length))) {
		F.line = 232;
		result_39805 = false;
		break BeforeRet;
		}
		
		L1: do {
			F.line = 233;
			var i_39929 = 0;
			F.line = 3499;
			var colontmp__39963 = 0;
			F.line = 233;
			colontmp__39963 = a_39803.length;
			F.line = 3500;
			var i_39966 = 0;
			L2: do {
				F.line = 3501;
					L3: while (true) {
					if (!(i_39966 < colontmp__39963)) break L3;
						F.line = 3502;
						i_39929 = i_39966;
						if (!((a_39803[i_39929] == b_39804[i_39929]))) {
						F.line = 234;
						result_39805 = false;
						break BeforeRet;
						}
						
						F.line = 3503;
						i_39966 = addInt(i_39966, 1);
					}
			} while(false);
		} while(false);
		F.line = 235;
		result_39805 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_39805;

}

function same_attrs_137505(a_137507, b_137508) {
	var result_137509 = false;

	var F={procname:"vdom.sameAttrs",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((a_137507.attrs != null ? a_137507.attrs.length : 0) == (b_137508.attrs != null ? b_137508.attrs.length : 0))) {
		F.line = 290;
		result_137509 = true;
		L1: do {
			F.line = 291;
			var i_137540 = 0;
			F.line = 3499;
			var colontmp__137542 = 0;
			F.line = 291;
			colontmp__137542 = (a_137507.attrs != null ? a_137507.attrs.length : 0);
			F.line = 3500;
			var i_137545 = 0;
			L2: do {
				F.line = 3501;
					L3: while (true) {
					if (!(i_137545 < colontmp__137542)) break L3;
						F.line = 3502;
						i_137540 = i_137545;
						if (!((a_137507.attrs[chckIndx(i_137540, 0, a_137507.attrs.length+0-1)-0] == b_137508.attrs[chckIndx(i_137540, 0, b_137508.attrs.length+0-1)-0]))) {
						F.line = 292;
						result_137509 = false;
						break BeforeRet;
						}
						
						F.line = 3503;
						i_137545 = addInt(i_137545, 1);
					}
			} while(false);
		} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	return result_137509;

}

function eq_154014(a_154016, b_154017) {
			var Tmp1;
			var Tmp5;
			var Tmp6;

	var result_154018 = 0;

	var F={procname:"karax.eq",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (!((a_154016.kind == b_154017.kind))) {
		F.line = 236;
		result_154018 = 1;
		break BeforeRet;
		}
		
		if (!((a_154016.id == b_154017.id))) {
		F.line = 239;
		result_154018 = 1;
		break BeforeRet;
		}
		
		F.line = 240;
		result_154018 = 3;
		if (!((a_154016.index == b_154017.index))) {
		F.line = 243;
		result_154018 = 1;
		break BeforeRet;
		}
		
		if ((a_154016.kind == 0)) {
		if (!((a_154016.text == b_154017.text))) {
		F.line = 247;
		result_154018 = 1;
		break BeforeRet;
		}
		
		}
		else {
			if ((a_154016.kind == 3)) Tmp1 = true; else {				Tmp1 = (a_154016.kind == 4);			}		if (Tmp1) {
		if (!((a_154016.text == b_154017.text))) {
		F.line = 249;
		result_154018 = 1;
		break BeforeRet;
		}
		
		if (!((len_135717(a_154016) == len_135717(b_154017)))) {
		F.line = 250;
		result_154018 = 1;
		break BeforeRet;
		}
		
		L2: do {
			F.line = 251;
			var i_154828 = 0;
			F.line = 3499;
			var colontmp__155402 = 0;
			F.line = 251;
			colontmp__155402 = len_135717(a_154016);
			F.line = 3500;
			var i_155405 = 0;
			L3: do {
				F.line = 3501;
					L4: while (true) {
					if (!(i_155405 < colontmp__155402)) break L4;
						F.line = 3502;
						i_154828 = i_155405;
						if ((eq_154014(HEX5BHEX5D_135741(a_154016, i_154828), HEX5BHEX5D_135741(b_154017, i_154828)) == 1)) {
						F.line = 252;
						result_154018 = 1;
						break BeforeRet;
						}
						
						F.line = 3503;
						i_155405 = addInt(i_155405, 1);
					}
			} while(false);
		} while(false);
		}
		else {
		if ((a_154016.kind == 6)) {
		if (!((a_154016.text == b_154017.text))) {
		F.line = 255;
		result_154018 = 1;
		break BeforeRet;
		}
		
		}
		else {
		if ((b_154017.kind == 5)) {
		if (!((a_154016.text == b_154017.text))) {
		F.line = 260;
		result_154018 = 1;
		break BeforeRet;
		}
		
		if (!((a_154016.key == b_154017.key))) {
		F.line = 266;
		result_154018 = 1;
		break BeforeRet;
		}
		
		F.line = 267;
		result_154018 = 0;
		break BeforeRet;
		}
		}}}
			if (!((a_154016.class == b_154017.class))) Tmp6 = true; else {				Tmp6 = !(eq_39801(a_154016.style, b_154017.style));			}			if (Tmp6) Tmp5 = true; else {				Tmp5 = !(same_attrs_137505(a_154016, b_154017));			}		if (Tmp5) {
		F.line = 273;
		result_154018 = 2;
		break BeforeRet;
		}
		
		F.line = 275;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_154018;

}

function update_styles_155420(new_node_155422, old_node_155423) {
	var F={procname:"karax.updateStyles",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_155423.dom == null))) {
		if (!((new_node_155422.style == null))) {
		F.line = 280;
		apply_style_41027(old_node_155423.dom, new_node_155422.style);
		}
		else {
			F.line = 281;
			old_node_155423.dom.style = {m_type: NTI26289, background: null, backgroundAttachment: null, backgroundColor: null, backgroundImage: null, backgroundPosition: null, backgroundRepeat: null, border: null, borderBottom: null, borderBottomColor: null, borderBottomStyle: null, borderBottomWidth: null, borderColor: null, borderLeft: null, borderLeftColor: null, borderLeftStyle: null, borderLeftWidth: null, borderRight: null, borderRightColor: null, borderRightStyle: null, borderRightWidth: null, borderStyle: null, borderTop: null, borderTopColor: null, borderTopStyle: null, borderTopWidth: null, borderWidth: null, bottom: null, captionSide: null, clear: null, clip: null, color: null, cursor: null, direction: null, display: null, emptyCells: null, cssFloat: null, font: null, fontFamily: null, fontSize: null, fontStretch: null, fontStyle: null, fontVariant: null, fontWeight: null, height: null, left: null, letterSpacing: null, lineHeight: null, listStyle: null, listStyleImage: null, listStylePosition: null, listStyleType: null, margin: null, marginBottom: null, marginLeft: null, marginRight: null, marginTop: null, maxHeight: null, maxWidth: null, minHeight: null, minWidth: null, overflow: null, padding: null, paddingBottom: null, paddingLeft: null, paddingRight: null, paddingTop: null, pageBreakAfter: null, pageBreakBefore: null, pointerEvents: null, position: null, right: null, scrollbar3dLightColor: null, scrollbarArrowColor: null, scrollbarBaseColor: null, scrollbarDarkshadowColor: null, scrollbarFaceColor: null, scrollbarHighlightColor: null, scrollbarShadowColor: null, scrollbarTrackColor: null, tableLayout: null, textAlign: null, textDecoration: null, textIndent: null, textTransform: null, transform: null, top: null, verticalAlign: null, visibility: null, width: null, wordSpacing: null, zIndex: 0};
		}
		
		F.line = 282;
		old_node_155423.dom.className = new_node_155422.class;
		}
		
		F.line = 283;
		old_node_155423.style = new_node_155422.style;
		F.line = 284;
		old_node_155423.class = new_node_155422.class;
	framePtr = F.prev;

	
}

function take_over_attr_135678(new_node_135680, old_node_135681) {
	var F={procname:"vdom.takeOverAttr",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 230;
		old_node_135681.attrs = new_node_135680.attrs;
	framePtr = F.prev;

	
}

function update_attributes_155460(new_node_155462, old_node_155463) {
	var F={procname:"karax.updateAttributes",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		if (!((old_node_155463.dom == null))) {
		L1: do {
			F.line = 289;
			var k_155475 = null;
			F.line = 289;
			var __155476 = null;
			L2: do {
				F.line = 285;
				var i_155483 = 0;
				F.line = 1992;
				var colontmp__155485 = 0;
				F.line = 285;
				colontmp__155485 = subInt((old_node_155463.attrs != null ? old_node_155463.attrs.length : 0), 2);
				F.line = 1998;
				var res_155487 = 0;
				L3: do {
					F.line = 1999;
						L4: while (true) {
						if (!(res_155487 <= colontmp__155485)) break L4;
							F.line = 2000;
							i_155483 = res_155487;
							F.line = 286;
							k_155475 = old_node_155463.attrs[chckIndx(i_155483, 0, old_node_155463.attrs.length+0-1)-0];
							F.line = 286;
							__155476 = old_node_155463.attrs[chckIndx(addInt(i_155483, 1), 0, old_node_155463.attrs.length+0-1)-0];
							F.line = 290;
							old_node_155463.dom.removeAttribute(k_155475);
							F.line = 2001;
							res_155487 = addInt(res_155487, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		L5: do {
			F.line = 291;
			var k_155477 = null;
			F.line = 291;
			var v_155478 = null;
			L6: do {
				F.line = 285;
				var i_155494 = 0;
				F.line = 1992;
				var colontmp__155496 = 0;
				F.line = 285;
				colontmp__155496 = subInt((new_node_155462.attrs != null ? new_node_155462.attrs.length : 0), 2);
				F.line = 1998;
				var res_155498 = 0;
				L7: do {
					F.line = 1999;
						L8: while (true) {
						if (!(res_155498 <= colontmp__155496)) break L8;
							F.line = 2000;
							i_155494 = res_155498;
							F.line = 286;
							k_155477 = new_node_155462.attrs[chckIndx(i_155494, 0, new_node_155462.attrs.length+0-1)-0];
							F.line = 286;
							v_155478 = new_node_155462.attrs[chckIndx(addInt(i_155494, 1), 0, new_node_155462.attrs.length+0-1)-0];
							if (!((v_155478 == null))) {
							F.line = 293;
							old_node_155463.dom.setAttribute(k_155477, v_155478);
							}
							
							F.line = 2001;
							res_155498 = addInt(res_155498, 2);
						}
				} while(false);
			} while(false);
		} while(false);
		}
		
		F.line = 294;
		take_over_attr_135678(new_node_155462, old_node_155463);
	framePtr = F.prev;

	
}

function merge_events_155514(new_node_155516, old_node_155517, kxi_155518) {
						var Tmp4;

	var F={procname:"karax.mergeEvents",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 297;
		var d_155519 = old_node_155517.dom;
		L1: do {
			F.line = 298;
			var i_155536 = 0;
			F.line = 3499;
			var colontmp__155542 = 0;
			F.line = 298;
			colontmp__155542 = (old_node_155517.events != null ? old_node_155517.events.length : 0);
			F.line = 3500;
			var i_155545 = 0;
			L2: do {
				F.line = 3501;
					L3: while (true) {
					if (!(i_155545 < colontmp__155542)) break L3;
						F.line = 3502;
						i_155536 = i_155545;
						F.line = 299;
						var k_155537 = old_node_155517.events[chckIndx(i_155536, 0, old_node_155517.events.length+0-1)-0]["Field0"];
						F.line = 300;
						F.line = 300;
						switch (k_155537) {
						case 30:
						case 29:
							Tmp4 = "keyup";
							break;
						default: 
							Tmp4 = to_event_name_134681[chckIndx(k_155537, 0, to_event_name_134681.length+0-1)-0];
							break;
						}
						var name_155540 = Tmp4;
						F.line = 303;
						d_155519.removeEventListener(name_155540, old_node_155517.events[chckIndx(i_155536, 0, old_node_155517.events.length+0-1)-0]["Field2"]);
						F.line = 3503;
						i_155545 = addInt(i_155545, 1);
					}
			} while(false);
		} while(false);
		F.line = 304;
		old_node_155517.events = new_node_155516.events;
		F.line = 305;
		apply_events_153078(old_node_155517, kxi_155518);
	framePtr = F.prev;

	
}

function HEX5BHEX5DHEX3D_135759(x_135761, idx_135762, y_135763) {
	var F={procname:"vdom.[]=",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 248;
		x_135761.kids[chckIndx(idx_135762, 0, x_135761.kids.length+0-1)-0] = y_135763;
	framePtr = F.prev;

	
}

function add_patch_v_155662(kxi_155664, parent_155665, pos_155666, new_child_155667) {
	var F={procname:"karax.addPatchV",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 334;
		var l_155668 = kxi_155664.patchLenV;
		if (((kxi_155664.patchesV != null ? kxi_155664.patchesV.length : 0) <= l_155668)) {
		F.line = 337;
		if (kxi_155664.patchesV != null) { kxi_155664.patchesV.push({parent: parent_155665, newChild: new_child_155667, pos: pos_155666}); } else { kxi_155664.patchesV = [{parent: parent_155665, newChild: new_child_155667, pos: pos_155666}]; };
		}
		else {
			F.line = 339;
			kxi_155664.patchesV[chckIndx(l_155668, 0, kxi_155664.patchesV.length+0-1)-0].parent = parent_155665;
			F.line = 340;
			kxi_155664.patchesV[chckIndx(l_155668, 0, kxi_155664.patchesV.length+0-1)-0].newChild = new_child_155667;
			F.line = 341;
			kxi_155664.patchesV[chckIndx(l_155668, 0, kxi_155664.patchesV.length+0-1)-0].pos = pos_155666;
		}
		
		F.line = 342;
		kxi_155664.patchLenV = addInt(kxi_155664.patchLenV, 1);
	framePtr = F.prev;

	
}

function add_patch_155614(kxi_155616, ka_155617, parenta_155618, currenta_155619, na_155620) {
	var F={procname:"karax.addPatch",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 322;
		var l_155621 = kxi_155616.patchLen;
		if (((kxi_155616.patches != null ? kxi_155616.patches.length : 0) <= l_155621)) {
		F.line = 325;
		if (kxi_155616.patches != null) { kxi_155616.patches.push({k: ka_155617, parent: parenta_155618, current: currenta_155619, n: na_155620}); } else { kxi_155616.patches = [{k: ka_155617, parent: parenta_155618, current: currenta_155619, n: na_155620}]; };
		}
		else {
			F.line = 327;
			kxi_155616.patches[chckIndx(l_155621, 0, kxi_155616.patches.length+0-1)-0].k = ka_155617;
			F.line = 328;
			kxi_155616.patches[chckIndx(l_155621, 0, kxi_155616.patches.length+0-1)-0].parent = parenta_155618;
			F.line = 329;
			kxi_155616.patches[chckIndx(l_155621, 0, kxi_155616.patches.length+0-1)-0].current = currenta_155619;
			F.line = 330;
			kxi_155616.patches[chckIndx(l_155621, 0, kxi_155616.patches.length+0-1)-0].n = na_155620;
		}
		
		F.line = 331;
		kxi_155616.patchLen = addInt(kxi_155616.patchLen, 1);
	framePtr = F.prev;

	
}

function diff_155827(new_node_155829, old_node_155830, parent_155831, current_155832, kxi_155833) {
				var Tmp1;
			var Tmp2;
			var Tmp3;
						var Tmp6;
						var Tmp9;
						var Tmp10;

	var result_155834 = 0;

	var F={procname:"karax.diff",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 386;
		result_155834 = eq_154014(new_node_155829, old_node_155830);
		F.line = 387;
		switch (result_155834) {
		case 0:
			F.line = 389;
			if (kxi_155833.components != null) { kxi_155833.components.push({oldNode: old_node_155830, newNode: new_node_155829, parent: parent_155831, current: current_155832}); } else { kxi_155833.components = [{oldNode: old_node_155830, newNode: new_node_155829, parent: parent_155831, current: current_155832}]; };
			break;
		case 3:
		case 2:
			F.line = 394;
			new_node_155829.dom = old_node_155830.dom;
			if ((result_155834 == 2)) {
			F.line = 396;
			update_styles_155420(new_node_155829, old_node_155830);
			F.line = 397;
			update_attributes_155460(new_node_155829, old_node_155830);
			if ((old_node_155830.kind == 0)) {
			F.line = 399;
			old_node_155830.text = new_node_155829.text;
			F.line = 400;
			old_node_155830.dom.nodeValue = new_node_155829.text;
			}
			
			}
			
				if (!(((new_node_155829.events != null ? new_node_155829.events.length : 0) == 0))) Tmp1 = true; else {					Tmp1 = !(((old_node_155830.events != null ? old_node_155830.events.length : 0) == 0));				}			if (Tmp1) {
			F.line = 403;
			merge_events_155514(new_node_155829, old_node_155830, kxi_155833);
			}
			
			F.line = 410;
			var new_length_156201 = len_135717(new_node_155829);
			F.line = 411;
			var old_length_156202 = len_135717(old_node_155830);
			if (((new_length_156201 == 0) && (old_length_156202 == 0))) {
			F.line = 412;
			break BeforeRet;
			}
			
			F.line = 413;
			var min_length_156203 = nimMin(new_length_156201, old_length_156202);
			if (!((old_node_155830.kind == new_node_155829.kind))) {
			F.line = 415;
			failed_assert_impl_20681(makeNimstrLit("oldNode.kind == newNode.kind "));
			}
			
			F.line = 416;
			var common_prefix_156402 = 0;
			F.line = 417;
			if ((old_node_155830.kind == 5)) Tmp3 = true; else {				Tmp3 = (old_node_155830.kind == 3);			}			if (Tmp3) Tmp2 = true; else {				Tmp2 = (old_node_155830.kind == 4);			}			var is_special_156430 = Tmp2;
			L4: do {
				F.line = 446;
					L5: while (true) {
					if (!(common_prefix_156402 < min_length_156203)) break L5;
						F.line = 422;
						var old_len_156462 = kxi_155833.patchLen;
						F.line = 423;
						var old_len_v_156464 = kxi_155833.patchLenV;
						if (!((common_prefix_156402 < len_135717(new_node_155829)))) {
						F.line = 424;
						failed_assert_impl_20681(makeNimstrLit("commonPrefix < len(newNode) "));
						}
						
						if (!((common_prefix_156402 < len_135717(old_node_155830)))) {
						F.line = 425;
						failed_assert_impl_20681(makeNimstrLit("commonPrefix < len(oldNode) "));
						}
						
						F.line = 426;
						if (is_special_156430) {
						Tmp6 = diff_155827(HEX5BHEX5D_135741(new_node_155829, common_prefix_156402), HEX5BHEX5D_135741(old_node_155830, common_prefix_156402), parent_155831, current_155832, kxi_155833);
						}
						else {
						Tmp6 = diff_155827(HEX5BHEX5D_135741(new_node_155829, common_prefix_156402), HEX5BHEX5D_135741(old_node_155830, common_prefix_156402), current_155832, current_155832.childNodes[chckIndx(common_prefix_156402, 0, current_155832.childNodes.length+0-1)-0], kxi_155833);
						}
						
						var r_156806 = Tmp6;
						F.line = 447;
						switch (r_156806) {
						case 3:
						case 0:
						case 2:
							F.line = 432;
							HEX5BHEX5DHEX3D_135759(new_node_155829, common_prefix_156402, HEX5BHEX5D_135741(old_node_155830, common_prefix_156402));
							F.line = 448;
							common_prefix_156402 = addInt(common_prefix_156402, 1);
							break;
						case 4:
							F.line = 435;
							add_patch_v_155662(kxi_155833, old_node_155830, common_prefix_156402, HEX5BHEX5D_135741(new_node_155829, common_prefix_156402));
							F.line = 448;
							common_prefix_156402 = addInt(common_prefix_156402, 1);
							F.line = 438;
							result_155834 = 4;
							break;
						case 1:
							F.line = 441;
							kxi_155833.patchLen = old_len_156462;
							F.line = 442;
							kxi_155833.patchLenV = old_len_v_156464;
							if (!((result_155834 == 1))) {
							F.line = 443;
							result_155834 = r_156806;
							}
							
							F.line = 444;
							break L4;
							break;
						}
					}
			} while(false);
			F.line = 451;
			var old_pos_156833 = subInt(old_length_156202, 1);
			F.line = 452;
			var new_pos_156834 = subInt(new_length_156201, 1);
			L7: do {
				F.line = 453;
					L8: while (true) {
						if (!(common_prefix_156402 <= old_pos_156833)) Tmp9 = false; else {							Tmp9 = (common_prefix_156402 <= new_pos_156834);						}					if (!Tmp9) break L8;
						F.line = 422;
						var old_len_156842 = kxi_155833.patchLen;
						F.line = 423;
						var old_len_v_156844 = kxi_155833.patchLenV;
						if (!((new_pos_156834 < len_135717(new_node_155829)))) {
						F.line = 424;
						failed_assert_impl_20681(makeNimstrLit("newPos < len(newNode) "));
						}
						
						if (!((old_pos_156833 < len_135717(old_node_155830)))) {
						F.line = 425;
						failed_assert_impl_20681(makeNimstrLit("oldPos < len(oldNode) "));
						}
						
						F.line = 426;
						if (is_special_156430) {
						Tmp10 = diff_155827(HEX5BHEX5D_135741(new_node_155829, new_pos_156834), HEX5BHEX5D_135741(old_node_155830, old_pos_156833), parent_155831, current_155832, kxi_155833);
						}
						else {
						Tmp10 = diff_155827(HEX5BHEX5D_135741(new_node_155829, new_pos_156834), HEX5BHEX5D_135741(old_node_155830, old_pos_156833), current_155832, current_155832.childNodes[chckIndx(old_pos_156833, 0, current_155832.childNodes.length+0-1)-0], kxi_155833);
						}
						
						var r_157206 = Tmp10;
						F.line = 454;
						switch (r_157206) {
						case 3:
						case 0:
						case 2:
							F.line = 432;
							HEX5BHEX5DHEX3D_135759(new_node_155829, new_pos_156834, HEX5BHEX5D_135741(old_node_155830, old_pos_156833));
							F.line = 455;
							old_pos_156833 = subInt(old_pos_156833, 1);
							F.line = 456;
							new_pos_156834 = subInt(new_pos_156834, 1);
							break;
						case 4:
							F.line = 435;
							add_patch_v_155662(kxi_155833, old_node_155830, old_pos_156833, HEX5BHEX5D_135741(new_node_155829, new_pos_156834));
							F.line = 455;
							old_pos_156833 = subInt(old_pos_156833, 1);
							F.line = 456;
							new_pos_156834 = subInt(new_pos_156834, 1);
							F.line = 438;
							result_155834 = 4;
							break;
						case 1:
							F.line = 441;
							kxi_155833.patchLen = old_len_156842;
							F.line = 442;
							kxi_155833.patchLenV = old_len_v_156844;
							if (!((result_155834 == 1))) {
							F.line = 443;
							result_155834 = r_157206;
							}
							
							F.line = 444;
							break L7;
							break;
						}
					}
			} while(false);
			F.line = 458;
			var pos_157251 = addInt(nimMin(old_pos_156833, new_pos_156834), 1);
			L11: do {
				F.line = 460;
				var i_157260 = 0;
				F.line = 2008;
				var colontmp__157405 = 0;
				F.line = 460;
				colontmp__157405 = subInt(pos_157251, 1);
				F.line = 2011;
				var res_157408 = common_prefix_156402;
				L12: do {
					F.line = 2012;
						L13: while (true) {
						if (!(res_157408 <= colontmp__157405)) break L13;
							F.line = 2013;
							i_157260 = res_157408;
							F.line = 461;
							var r_157261 = diff_155827(HEX5BHEX5D_135741(new_node_155829, i_157260), HEX5BHEX5D_135741(old_node_155830, i_157260), current_155832, current_155832.childNodes[chckIndx(i_157260, 0, current_155832.childNodes.length+0-1)-0], kxi_155833);
							if ((r_157261 == 4)) {
							F.line = 464;
							add_patch_v_155662(kxi_155833, old_node_155830, i_157260, HEX5BHEX5D_135741(new_node_155829, i_157260));
							}
							else {
							if (!((r_157261 == 1))) {
							F.line = 466;
							HEX5BHEX5DHEX3D_135759(new_node_155829, i_157260, HEX5BHEX5D_135741(old_node_155830, i_157260));
							}
							}
							F.line = 2014;
							res_157408 = addInt(res_157408, 1);
						}
				} while(false);
			} while(false);
			if ((addInt(old_pos_156833, 1) == old_length_156202)) {
			L14: do {
				F.line = 471;
				var i_157286 = 0;
				F.line = 2011;
				var res_157415 = pos_157251;
				L15: do {
					F.line = 2012;
						L16: while (true) {
						if (!(res_157415 <= new_pos_156834)) break L16;
							F.line = 2013;
							i_157286 = res_157415;
							F.line = 472;
							add_patch_155614(kxi_155833, 2, current_155832, null, HEX5BHEX5D_135741(new_node_155829, i_157286));
							F.line = 473;
							result_155834 = 4;
							F.line = 2014;
							res_157415 = addInt(res_157415, 1);
						}
				} while(false);
			} while(false);
			}
			else {
				F.line = 475;
				var before_157287 = current_155832.childNodes[chckIndx(addInt(old_pos_156833, 1), 0, current_155832.childNodes.length+0-1)-0];
				L17: do {
					F.line = 476;
					var i_157296 = 0;
					F.line = 2011;
					var res_157422 = pos_157251;
					L18: do {
						F.line = 2012;
							L19: while (true) {
							if (!(res_157422 <= new_pos_156834)) break L19;
								F.line = 2013;
								i_157296 = res_157422;
								F.line = 477;
								add_patch_155614(kxi_155833, 3, current_155832, before_157287, HEX5BHEX5D_135741(new_node_155829, i_157296));
								F.line = 478;
								result_155834 = 4;
								F.line = 2014;
								res_157422 = addInt(res_157422, 1);
							}
					} while(false);
				} while(false);
			}
			
			L20: do {
				F.line = 480;
				var i_157305 = 0;
				F.line = 2011;
				var res_157429 = pos_157251;
				L21: do {
					F.line = 2012;
						L22: while (true) {
						if (!(res_157429 <= old_pos_156833)) break L22;
							F.line = 2013;
							i_157305 = res_157429;
							F.line = 481;
							add_patch_155614(kxi_152324[0], 4, null, null, HEX5BHEX5D_135741(old_node_155830, i_157305));
							F.line = 483;
							add_patch_155614(kxi_155833, 1, current_155832, current_155832.childNodes[chckIndx(i_157305, 0, current_155832.childNodes.length+0-1)-0], null);
							F.line = 484;
							result_155834 = 4;
							F.line = 2014;
							res_157429 = addInt(res_157429, 1);
						}
				} while(false);
			} while(false);
			break;
		case 1:
			F.line = 486;
			add_patch_155614(kxi_152324[0], 4, null, null, old_node_155830);
			F.line = 487;
			add_patch_155614(kxi_155833, 0, parent_155831, current_155832, new_node_155829);
			break;
		case 4:
			if (true) {
			F.line = 488;
			failed_assert_impl_20681(makeNimstrLit("false eq returned usenewNode"));
			}
			
			break;
		}
	} while (false);
	framePtr = F.prev;

	return result_155834;

}

function apply_components_157446(kxi_157448) {
						var Tmp3;

	var F={procname:"karax.applyComponents",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 496;
		var i_157450 = 0;
		L1: do {
			F.line = 499;
				L2: while (true) {
				if (!(i_157450 < (kxi_157448.components != null ? kxi_157448.components.length : 0))) break L2;
					F.line = 500;
					var x_157458 = kxi_157448.components[chckIndx(i_157450, 0, kxi_157448.components.length+0-1)-0].oldNode;
					F.line = 501;
					var new_node_157459 = kxi_157448.components[chckIndx(i_157450, 0, kxi_157448.components.length+0-1)-0].newNode;
						if (!!((x_157458.changedImpl == null))) Tmp3 = false; else {							Tmp3 = x_157458.changedImpl(x_157458, new_node_157459);						}					if (Tmp3) {
					F.line = 507;
					var current_157801 = kxi_157448.components[chckIndx(i_157450, 0, kxi_157448.components.length+0-1)-0].current;
					F.line = 508;
					var parent_157802 = kxi_157448.components[chckIndx(i_157450, 0, kxi_157448.components.length+0-1)-0].parent;
					F.line = 509;
					x_157458.updatedImpl(x_157458, new_node_157459);
					F.line = 510;
					var old_expanded_157803 = x_157458.expanded;
					F.line = 511;
					x_157458.expanded = x_157458.renderImpl(x_157458);
					F.line = 514;
					x_157458.renderedVersion = x_157458.version;
					if ((old_expanded_157803 == null)) {
					F.line = 516;
					add_patch_155614(kxi_152324[0], 4, null, null, x_157458);
					F.line = 517;
					add_patch_155614(kxi_157448, 0, parent_157802, current_157801, x_157458.expanded);
					}
					else {
						F.line = 521;
						var res_158201 = diff_155827(x_157458.expanded, old_expanded_157803, parent_157802, current_157801, kxi_157448);
						if ((res_158201 == 4)) {
						}
						else {
						if (!((res_158201 == 1))) {
						F.line = 529;
						x_157458.expanded = old_expanded_157803;
						if (!(!((old_expanded_157803.dom == null)))) {
						F.line = 530;
						failed_assert_impl_20681(makeNimstrLit("\x0Anot (oldExpanded.dom == nil) old expanded.dom is nil"));
						}
						
						}
						else {
							if (!(!((x_157458.expanded.dom == null)))) {
							F.line = 534;
							failed_assert_impl_20681(makeNimstrLit("\x0Anot (x.expanded.dom == nil) expanded.dom is nil"));
							}
							
						}
						}
					}
					
					}
					
					F.line = 535;
					i_157450 = addInt(i_157450, 1);
				}
		} while(false);
		F.line = 536;
		if (kxi_157448.components.length < 0) { for (var i=kxi_157448.components.length;i<0;++i) kxi_157448.components.push({oldNode: null, newNode: null, parent: null, current: null}); }
               else { kxi_157448.components.length = 0; };
	framePtr = F.prev;

	
}

function apply_patch_155709(kxi_155711) {
	var F={procname:"karax.applyPatch",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		L1: do {
			F.line = 345;
			var i_155721 = 0;
			F.line = 3499;
			var colontmp__155802 = 0;
			F.line = 345;
			colontmp__155802 = kxi_155711.patchLen;
			F.line = 3500;
			var i_155805 = 0;
			L2: do {
				F.line = 3501;
					L3: while (true) {
					if (!(i_155805 < colontmp__155802)) break L3;
						F.line = 3502;
						i_155721 = i_155805;
						F.line = 346;
						var p_155722 = nimCopy(null, kxi_155711.patches[chckIndx(i_155721, 0, kxi_155711.patches.length+0-1)-0], NTI152209);
						F.line = 347;
						switch (p_155722.k) {
						case 0:
							F.line = 349;
							var nn_155723 = vnode_to_dom_153178(p_155722.n, kxi_155711);
							if ((p_155722.parent == null)) {
							F.line = 351;
							replace_by_id_153824(kxi_155711.rootId, nn_155723);
							}
							else {
								F.line = 353;
							p_155722.parent.replaceChild(nn_155723, p_155722.current);
							}
							
							break;
						case 1:
							F.line = 355;
							p_155722.parent.removeChild(p_155722.current);
							break;
						case 2:
							F.line = 357;
							var nn_155735 = vnode_to_dom_153178(p_155722.n, kxi_155711);
							F.line = 358;
							p_155722.parent.appendChild(nn_155735);
							break;
						case 3:
							F.line = 360;
							var nn_155736 = vnode_to_dom_153178(p_155722.n, kxi_155711);
							F.line = 361;
							p_155722.parent.insertBefore(nn_155736, p_155722.current);
							break;
						case 4:
							F.line = 363;
							var n_155737 = p_155722.n;
							if (!((n_155737.id == null))) {
							F.line = 364;
							delete kxi_155711.byId[n_155737.id];
							}
							
							if ((n_155737.kind == 5)) {
							F.line = 366;
							var x_155761 = n_155737;
							if (!((x_155761.onDetachImpl == null))) {
							F.line = 367;
							x_155761.onDetachImpl(x_155761);
							}
							
							}
							
							if (!(kxi_155711.surpressRedraws)) {
							F.line = 369;
							n_155737.dom = null;
							}
							
							break;
						}
						F.line = 3503;
						i_155805 = addInt(i_155805, 1);
					}
			} while(false);
		} while(false);
		F.line = 370;
		kxi_155711.patchLen = 0;
		L4: do {
			F.line = 371;
			var i_155779 = 0;
			F.line = 3499;
			var colontmp__155808 = 0;
			F.line = 371;
			colontmp__155808 = kxi_155711.patchLenV;
			F.line = 3500;
			var i_155811 = 0;
			L5: do {
				F.line = 3501;
					L6: while (true) {
					if (!(i_155811 < colontmp__155808)) break L6;
						F.line = 3502;
						i_155779 = i_155811;
						F.line = 372;
						var p_155780 = nimCopy(null, kxi_155711.patchesV[chckIndx(i_155779, 0, kxi_155711.patchesV.length+0-1)-0], NTI152211);
						F.line = 373;
						HEX5BHEX5DHEX3D_135759(p_155780.parent, p_155780.pos, p_155780.newChild);
						if (!(!((p_155780.newChild.dom == null)))) {
						F.line = 374;
						failed_assert_impl_20681(makeNimstrLit("\x0Anot (p.newChild.dom == nil) "));
						}
						
						F.line = 3503;
						i_155811 = addInt(i_155811, 1);
					}
			} while(false);
		} while(false);
		F.line = 375;
		kxi_155711.patchLenV = 0;
	framePtr = F.prev;

	
}

function dodraw_159524(kxi_159526) {
	var F={procname:"karax.dodraw",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((kxi_159526.renderer === null)) {
		F.line = 584;
		break BeforeRet;
		}
		
		F.line = 585;
		var rdata_159533 = {hashPart: window.location.hash};
		F.line = 586;
		var newtree_159534 = kxi_159526.renderer(rdata_159533);
		F.line = 587;
		kxi_159526.runCount = addInt(kxi_159526.runCount, 1);
		F.line = 588;
		newtree_159534.id = kxi_159526.rootId;
		F.line = 589;
		kxi_159526.toFocus = null;
		if ((kxi_159526.currentTree == null)) {
		F.line = 591;
		var asdom_159555 = vnode_to_dom_153178(newtree_159534, kxi_159526);
		F.line = 592;
		replace_by_id_153824(kxi_159526.rootId, asdom_159555);
		}
		else {
			if (!(same_153701(kxi_159526.currentTree, document.getElementById(kxi_159526.rootId), 0))) {
			F.line = 594;
			failed_assert_impl_20681(makeNimstrLit("same(kxi.currentTree, getElementById(document, kxi.rootId), 0) "));
			}
			
			F.line = 595;
			var olddom_159556 = document.getElementById(kxi_159526.rootId);
			F.line = 596;
			diff_155827(newtree_159534, kxi_159526.currentTree, null, olddom_159556, kxi_159526);
		}
		
		F.line = 601;
		apply_components_157446(kxi_159526);
		F.line = 606;
		apply_patch_155709(kxi_159526);
		F.line = 607;
		kxi_159526.currentTree = newtree_159534;
		if (!(same_153701(kxi_159526.currentTree, document.getElementById(kxi_159526.rootId), 0))) {
		F.line = 608;
		failed_assert_impl_20681(makeNimstrLit("same(kxi.currentTree, getElementById(document, kxi.rootId), 0) "));
		}
		
		if (!((kxi_159526.postRenderCallback === null))) {
		F.line = 611;
		kxi_159526.postRenderCallback(rdata_159533);
		}
		
		if (!((kxi_159526.toFocus == null))) {
		F.line = 615;
		kxi_159526.toFocus.focus();
		}
		
		F.line = 616;
		kxi_159526.renderId = 0;
	} while (false);
	framePtr = F.prev;

	
}

function init_160446(ev_160448) {

		function HEX3Aanonymous_160449() {
			var F={procname:"init.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 641;
				dodraw_159524(kxi_152324[0]);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.init",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		F.line = 641;
		kxi_152324[0].renderId = window.requestAnimationFrame(HEX3Aanonymous_160449);
	framePtr = F.prev;

	
}

function redraw_160214(kxi_160216) {

		function HEX3Aanonymous_160401() {
			var F={procname:"redraw.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 634;
				dodraw_159524(kxi_160216);
			framePtr = F.prev;

			
		}

	var F={procname:"karax.redraw",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		if ((kxi_160216.renderId == 0)) {
		F.line = 634;
		kxi_160216.renderId = window.requestAnimationFrame(HEX3Aanonymous_160401);
		}
		
	framePtr = F.prev;

	
}

function set_renderer_160478(renderer_160483, root_160484, client_post_render_callback_160488) {

		function HEX3Aanonymous_160648() {
			var F={procname:"setRenderer.:anonymous",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
			framePtr = F;
				F.line = 664;
				redraw_160214(kxi_152324[0]);
			framePtr = F.prev;

			
		}

	var result_160489 = null;

	var F={procname:"karax.setRenderer",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/karax.nim",line:0};
	framePtr = F;
		if ((document.getElementById(root_160484) === null)) {
		F.line = 650;
		var msg_160497 = (("Could not find a <div> with id=" + root_160484) + ". Karax needs it as its rendering target.");
		F.line = 652;
		F.line = 2782;
		var e_160504 = null;
		F.line = 2783;
		e_160504 = {m_type: NTI3839, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2784;
		e_160504.message = nimCopy(null, cstrToNimstr(msg_160497), NTI151);
		F.line = 2785;
		e_160504.parent = null;
		raiseException(e_160504, "Exception");
		}
		
		F.line = 654;
		result_160489 = {rootId: root_160484, renderer: nimCopy(null, renderer_160483, NTI160480), postRenderCallback: nimCopy(null, client_post_render_callback_160488, NTI160485), patches: new_seq_160527(60), patchesV: new_seq_160579(30), components: nimCopy(null, [], NTI160631), surpressRedraws: false, byId: {}, orphans: {}, currentTree: null, toFocus: null, toFocusV: null, renderId: 0, patchLen: 0, patchLenV: 0, runCount: 0};
		F.line = 662;
		kxi_152324[0] = result_160489;
		F.line = 663;
		window.onload = init_160446;
		F.line = 664;
		window.onhashchange = HEX3Aanonymous_160648;
	framePtr = F.prev;

	return result_160489;

}

function new_vnode_137029(kind_137031) {
	var result_137032 = null;

	var F={procname:"vdom.newVNode",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 259;
		result_137032 = {kind: kind_137031, index: -1, m_type: NTI134718, id: null, class: null, text: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_137032;

}

function add_135777(parent_135779, kid_135780) {
	var F={procname:"vdom.add",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 253;
		if (parent_135779.kids != null) { parent_135779.kids.push(kid_135780); } else { parent_135779.kids = [kid_135780]; };
	framePtr = F.prev;

	
}

function tree_137048(kind_137050, kids_137052) {
	var result_137053 = null;

	var F={procname:"vdom.tree",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 262;
		result_137053 = new_vnode_137029(kind_137050);
		L1: do {
			F.line = 263;
			var k_137092 = null;
			F.line = 2151;
			var i_137096 = 0;
			L2: do {
				F.line = 2152;
					L3: while (true) {
					if (!(i_137096 < (kids_137052 != null ? kids_137052.length : 0))) break L3;
						F.line = 2153;
						k_137092 = kids_137052[chckIndx(i_137096, 0, kids_137052.length+0-1)-0];
						F.line = 263;
						add_135777(result_137053, k_137092);
						F.line = 2154;
						i_137096 = addInt(i_137096, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_137053;

}

function set_attr_135549(n_135551, key_135552, val_135553) {
	var F={procname:"vdom.setAttr",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((n_135551.attrs != null ? n_135551.attrs.length : 0) == 0)) {
		F.line = 216;
		n_135551.attrs = nimCopy(null, [key_135552, val_135553], NTI135572);
		}
		else {
			L1: do {
				F.line = 218;
				var i_135591 = 0;
				F.line = 1992;
				var colontmp__135613 = 0;
				F.line = 218;
				colontmp__135613 = subInt((n_135551.attrs != null ? n_135551.attrs.length : 0), 2);
				F.line = 1998;
				var res_135616 = 0;
				L2: do {
					F.line = 1999;
						L3: while (true) {
						if (!(res_135616 <= colontmp__135613)) break L3;
							F.line = 2000;
							i_135591 = res_135616;
							if ((n_135551.attrs[chckIndx(i_135591, 0, n_135551.attrs.length+0-1)-0] == key_135552)) {
							F.line = 220;
							n_135551.attrs[chckIndx(addInt(i_135591, 1), 0, n_135551.attrs.length+0-1)-0] = val_135553;
							F.line = 221;
							break BeforeRet;
							}
							
							F.line = 2001;
							res_135616 = addInt(res_135616, 2);
						}
				} while(false);
			} while(false);
			F.line = 222;
			var Tmp4 = nimCopy(null, key_135552, NTI153);
			if (n_135551.attrs != null) { n_135551.attrs.push(Tmp4); } else { n_135551.attrs = [Tmp4]; };
			F.line = 223;
			var Tmp5 = nimCopy(null, val_135553, NTI153);
			if (n_135551.attrs != null) { n_135551.attrs.push(Tmp5); } else { n_135551.attrs = [Tmp5]; };
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function text_137175(s_137177) {
	var result_137178 = null;

	var F={procname:"vdom.text",prev:framePtr,filename:"/mnt/sda5/ivan/devel/nim/karax/karax/vdom.nim",line:0};
	framePtr = F;
		F.line = 271;
		result_137178 = {kind: 0, text: toJSStr(s_137177), index: -1, m_type: NTI134718, id: null, class: null, kids: null, attrs: null, events: null, style: null, dom: null};
	framePtr = F.prev;

	return result_137178;

}

function tmenu_208043() {
	var result_208045 = null;

	var F={procname:"index.tmenu",prev:framePtr,filename:"index.nim",line:0};
	framePtr = F;
		F.line = 18;
		F.line = 18;
		var tmp_208070 = tree_137048(18, []);
		F.line = 18;
		tmp_208070.class = "navbar navbar-expand-lg navbar-dark fixed-top";
		F.line = 18;
		tmp_208070.id = "mainNav";
		F.line = 19;
		var tmp_208076 = tree_137048(43, []);
		F.line = 19;
		tmp_208076.class = "container";
		F.line = 20;
		var tmp_208082 = tree_137048(44, []);
		F.line = 20;
		tmp_208082.class = "navbar-brand js-scroll-trigger";
		F.line = 20;
		set_attr_135549(tmp_208082, "href", "#page-top");
		F.line = 20;
		add_135777(tmp_208082, text_137175(makeNimstrLit("HOME")));
		F.line = 20;
		add_135777(tmp_208076, tmp_208082);
		F.line = 31;
		var tmp_208088 = tree_137048(104, []);
		F.line = 31;
		tmp_208088.class = "navbar-toggler navbar-toggler-right";
		F.line = 32;
		set_attr_135549(tmp_208088, "type", "button");
		F.line = 33;
		set_attr_135549(tmp_208088, "data-toggle", "collapse");
		F.line = 34;
		set_attr_135549(tmp_208088, "data-target", "#navbarResponsive");
		F.line = 35;
		set_attr_135549(tmp_208088, "aria-controls", "navbarResponsive");
		F.line = 36;
		set_attr_135549(tmp_208088, "aria-expanded", "false");
		F.line = 37;
		set_attr_135549(tmp_208088, "aria-label", "Toggle navigation");
		F.line = 38;
		add_135777(tmp_208088, text_137175(makeNimstrLit("Menu")));
		F.line = 39;
		var tmp_208094 = tree_137048(61, []);
		F.line = 39;
		tmp_208094.class = "fa fa-bars";
		F.line = 39;
		add_135777(tmp_208088, tmp_208094);
		F.line = 39;
		add_135777(tmp_208076, tmp_208088);
		F.line = 40;
		var tmp_208100 = tree_137048(43, []);
		F.line = 40;
		tmp_208100.class = "collapse navbar-collapse";
		F.line = 40;
		tmp_208100.id = "navbarResponsive";
		F.line = 41;
		var tmp_208106 = tree_137048(36, []);
		F.line = 41;
		tmp_208106.class = "navbar-nav text-uppercase ml-auto";
		F.line = 42;
		var tmp_208112 = tree_137048(37, []);
		F.line = 42;
		tmp_208112.class = "nav-item";
		F.line = 43;
		var tmp_208118 = tree_137048(44, []);
		F.line = 43;
		tmp_208118.class = "nav-link js-scroll-trigger";
		F.line = 43;
		set_attr_135549(tmp_208118, "href", "#Why");
		F.line = 43;
		add_135777(tmp_208118, text_137175(makeNimstrLit("Why")));
		F.line = 43;
		add_135777(tmp_208112, tmp_208118);
		F.line = 43;
		add_135777(tmp_208106, tmp_208112);
		F.line = 44;
		var tmp_208124 = tree_137048(37, []);
		F.line = 44;
		tmp_208124.class = "nav-item";
		F.line = 45;
		var tmp_208130 = tree_137048(44, []);
		F.line = 45;
		tmp_208130.class = "nav-link js-scroll-trigger";
		F.line = 45;
		set_attr_135549(tmp_208130, "href", "#What");
		F.line = 45;
		add_135777(tmp_208130, text_137175(makeNimstrLit("What")));
		F.line = 45;
		add_135777(tmp_208124, tmp_208130);
		F.line = 45;
		add_135777(tmp_208106, tmp_208124);
		F.line = 46;
		var tmp_208136 = tree_137048(37, []);
		F.line = 46;
		tmp_208136.class = "nav-item";
		F.line = 47;
		var tmp_208142 = tree_137048(44, []);
		F.line = 47;
		tmp_208142.class = "nav-link js-scroll-trigger";
		F.line = 47;
		set_attr_135549(tmp_208142, "href", "#How");
		F.line = 47;
		add_135777(tmp_208142, text_137175(makeNimstrLit("How")));
		F.line = 47;
		add_135777(tmp_208136, tmp_208142);
		F.line = 47;
		add_135777(tmp_208106, tmp_208136);
		F.line = 48;
		var tmp_208148 = tree_137048(37, []);
		F.line = 48;
		tmp_208148.class = "nav-item";
		F.line = 49;
		var tmp_208154 = tree_137048(44, []);
		F.line = 49;
		tmp_208154.class = "nav-link js-scroll-trigger";
		F.line = 49;
		set_attr_135549(tmp_208154, "href", "#documentation");
		F.line = 49;
		add_135777(tmp_208154, text_137175(makeNimstrLit("Documetation")));
		F.line = 49;
		add_135777(tmp_208148, tmp_208154);
		F.line = 49;
		add_135777(tmp_208106, tmp_208148);
		F.line = 50;
		var tmp_208160 = tree_137048(37, []);
		F.line = 50;
		tmp_208160.class = "nav-item";
		F.line = 51;
		var tmp_208166 = tree_137048(44, []);
		F.line = 51;
		tmp_208166.class = "nav-link js-scroll-trigger";
		F.line = 51;
		set_attr_135549(tmp_208166, "href", "#collaborate");
		F.line = 51;
		add_135777(tmp_208166, text_137175(makeNimstrLit("Collaborate")));
		F.line = 51;
		add_135777(tmp_208160, tmp_208166);
		F.line = 51;
		add_135777(tmp_208106, tmp_208160);
		F.line = 52;
		var tmp_208172 = tree_137048(37, []);
		F.line = 52;
		tmp_208172.class = "nav-item";
		F.line = 53;
		var tmp_208178 = tree_137048(44, []);
		F.line = 53;
		tmp_208178.class = "nav-link js-scroll-trigger";
		F.line = 53;
		set_attr_135549(tmp_208178, "href", "#contact");
		F.line = 53;
		add_135777(tmp_208178, text_137175(makeNimstrLit("contact")));
		F.line = 53;
		add_135777(tmp_208172, tmp_208178);
		F.line = 53;
		add_135777(tmp_208106, tmp_208172);
		F.line = 53;
		add_135777(tmp_208100, tmp_208106);
		F.line = 53;
		add_135777(tmp_208076, tmp_208100);
		F.line = 53;
		add_135777(tmp_208070, tmp_208076);
		result_208045 = tmp_208070;
	framePtr = F.prev;

	return result_208045;

}

function logoheader_208211() {
	var result_208213 = null;

	var F={procname:"index.logoheader",prev:framePtr,filename:"index.nim",line:0};
	framePtr = F;
		F.line = 60;
		F.line = 60;
		var tmp_208224 = tree_137048(43, []);
		F.line = 61;
		var tmp_208230 = tree_137048(27, []);
		F.line = 61;
		tmp_208230.class = "masthead";
		F.line = 62;
		var tmp_208236 = tree_137048(43, []);
		F.line = 62;
		tmp_208236.class = "container";
		F.line = 63;
		var tmp_208242 = tree_137048(43, []);
		F.line = 63;
		tmp_208242.class = "intro-text";
		F.line = 64;
		var tmp_208248 = tree_137048(75, []);
		F.line = 64;
		tmp_208248.class = "mobil";
		F.line = 64;
		set_attr_135549(tmp_208248, "src", "img/logo_header.png");
		F.line = 64;
		set_attr_135549(tmp_208248, "alt", "Collective Data Trust");
		F.line = 64;
		add_135777(tmp_208242, tmp_208248);
		F.line = 64;
		add_135777(tmp_208236, tmp_208242);
		F.line = 64;
		add_135777(tmp_208230, tmp_208236);
		F.line = 64;
		add_135777(tmp_208224, tmp_208230);
		result_208213 = tmp_208224;
	framePtr = F.prev;

	return result_208213;

}

function part_203059(s_203061) {
	var result_203062 = null;

	var F={procname:"sections.part",prev:framePtr,filename:"sections.nim",line:0};
	framePtr = F;
		F.line = 17;
		F.line = 17;
		var tmp_203078 = tree_137048(17, []);
		F.line = 17;
		tmp_203078.class = "bg-dark";
		F.line = 17;
		tmp_203078.id = toJSStr(get_str_176679(HEX5BHEX5D_187196(s_203061, makeNimstrLit("title")), makeNimstrLit("")));
		F.line = 18;
		var tmp_203085 = tree_137048(43, []);
		F.line = 18;
		tmp_203085.class = "container";
		F.line = 19;
		var tmp_203091 = tree_137048(43, []);
		F.line = 19;
		tmp_203091.class = "row";
		F.line = 20;
		var tmp_203097 = tree_137048(43, []);
		F.line = 20;
		tmp_203097.class = "col-sm-6";
		F.line = 21;
		var tmp_203103 = tree_137048(43, []);
		F.line = 21;
		tmp_203103.class = "continer";
		L1: do {
			F.line = 22;
			var i_203104 = null;
			F.line = 681;
			var colontmp__203147 = null;
			F.line = 22;
			colontmp__203147 = HEX5BHEX5D_187196(s_203061, makeNimstrLit("images"));
			if (!((colontmp__203147.kind == 6))) {
			F.line = 683;
			failed_assert_impl_20681(makeNimstrLit("node.kind == JArray "));
			}
			
			L2: do {
				F.line = 684;
				var i_203151 = null;
				F.line = 3788;
				var colontmp__203153 = null;
				F.line = 684;
				colontmp__203153 = colontmp__203147.elems;
				F.line = 3790;
				var i_203155 = 0;
				F.line = 3791;
				var l_203157 = (colontmp__203153 != null ? colontmp__203153.length : 0);
				L3: do {
					F.line = 3792;
						L4: while (true) {
						if (!(i_203155 < l_203157)) break L4;
							F.line = 3793;
							i_203151 = colontmp__203153[chckIndx(i_203155, 0, colontmp__203153.length+0-1)-0];
							F.line = 685;
							i_203104 = i_203151;
							F.line = 23;
							var tmp_203110 = tree_137048(31, []);
							F.line = 23;
							tmp_203110.class = "media-body";
							F.line = 24;
							var tmp_203116 = tree_137048(75, []);
							F.line = 24;
							set_attr_135549(tmp_203116, "src", toJSStr(get_str_176679(i_203104, makeNimstrLit(""))));
							F.line = 24;
							add_135777(tmp_203110, tmp_203116);
							F.line = 24;
							add_135777(tmp_203103, tmp_203110);
							F.line = 3794;
							i_203155 = addInt(i_203155, 1);
							if (!(((colontmp__203153 != null ? colontmp__203153.length : 0) == l_203157))) {
							F.line = 3795;
							failed_assert_impl_20681(makeNimstrLit("len(a) == L seq modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 24;
		add_135777(tmp_203097, tmp_203103);
		F.line = 24;
		add_135777(tmp_203091, tmp_203097);
		F.line = 25;
		var tmp_203123 = tree_137048(43, []);
		F.line = 25;
		tmp_203123.class = "col-sm-6 text-justify mb-0";
		F.line = 26;
		var tmp_203129 = tree_137048(22, []);
		F.line = 26;
		tmp_203129.class = "section-heading text-justify";
		F.line = 26;
		add_135777(tmp_203129, text_137175(get_str_176679(HEX5BHEX5D_187196(s_203061, makeNimstrLit("title")), makeNimstrLit(""))));
		F.line = 26;
		add_135777(tmp_203123, tmp_203129);
		L5: do {
			F.line = 27;
			var pa_203131 = null;
			F.line = 681;
			var colontmp__203162 = null;
			F.line = 27;
			colontmp__203162 = HEX5BHEX5D_187196(s_203061, makeNimstrLit("contents"));
			if (!((colontmp__203162.kind == 6))) {
			F.line = 683;
			failed_assert_impl_20681(makeNimstrLit("node.kind == JArray "));
			}
			
			L6: do {
				F.line = 684;
				var i_203166 = null;
				F.line = 3788;
				var colontmp__203168 = null;
				F.line = 684;
				colontmp__203168 = colontmp__203162.elems;
				F.line = 3790;
				var i_203170 = 0;
				F.line = 3791;
				var l_203172 = (colontmp__203168 != null ? colontmp__203168.length : 0);
				L7: do {
					F.line = 3792;
						L8: while (true) {
						if (!(i_203170 < l_203172)) break L8;
							F.line = 3793;
							i_203166 = colontmp__203168[chckIndx(i_203170, 0, colontmp__203168.length+0-1)-0];
							F.line = 685;
							pa_203131 = i_203166;
							F.line = 28;
							var tmp_203137 = tree_137048(31, []);
							F.line = 28;
							add_135777(tmp_203137, text_137175(get_str_176679(pa_203131, makeNimstrLit(""))));
							F.line = 28;
							add_135777(tmp_203123, tmp_203137);
							F.line = 3794;
							i_203170 = addInt(i_203170, 1);
							if (!(((colontmp__203168 != null ? colontmp__203168.length : 0) == l_203172))) {
							F.line = 3795;
							failed_assert_impl_20681(makeNimstrLit("len(a) == L seq modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 28;
		add_135777(tmp_203091, tmp_203123);
		F.line = 28;
		add_135777(tmp_203085, tmp_203091);
		F.line = 28;
		add_135777(tmp_203078, tmp_203085);
		result_203062 = tmp_203078;
	framePtr = F.prev;

	return result_203062;

}

function parts_203186(sec_203188) {
	var result_203189 = null;

	var F={procname:"sections.parts",prev:framePtr,filename:"sections.nim",line:0};
	framePtr = F;
		F.line = 34;
		F.line = 34;
		var tmp_203196 = tree_137048(43, []);
		L1: do {
			F.line = 35;
			var s_203197 = null;
			if (!((sec_203188.kind == 6))) {
			F.line = 683;
			failed_assert_impl_20681(makeNimstrLit("node.kind == JArray "));
			}
			
			L2: do {
				F.line = 684;
				var i_203203 = null;
				F.line = 3788;
				var colontmp__203205 = null;
				F.line = 684;
				colontmp__203205 = sec_203188.elems;
				F.line = 3790;
				var i_203207 = 0;
				F.line = 3791;
				var l_203209 = (colontmp__203205 != null ? colontmp__203205.length : 0);
				L3: do {
					F.line = 3792;
						L4: while (true) {
						if (!(i_203207 < l_203209)) break L4;
							F.line = 3793;
							i_203203 = colontmp__203205[chckIndx(i_203207, 0, colontmp__203205.length+0-1)-0];
							F.line = 685;
							s_203197 = i_203203;
							F.line = 36;
							add_135777(tmp_203196, part_203059(s_203197));
							F.line = 3794;
							i_203207 = addInt(i_203207, 1);
							if (!(((colontmp__203205 != null ? colontmp__203205.length : 0) == l_203209))) {
							F.line = 3795;
							failed_assert_impl_20681(makeNimstrLit("len(a) == L seq modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
		result_203189 = tmp_203196;
	framePtr = F.prev;

	return result_203189;

}

function documentation_205054(c_205056) {
	var result_205057 = null;

	var F={procname:"documentation.documentation",prev:framePtr,filename:"components/documentation.nim",line:0};
	framePtr = F;
		F.line = 9;
		F.line = 9;
		var tmp_205072 = tree_137048(17, []);
		F.line = 9;
		tmp_205072.class = "bg-dark";
		F.line = 9;
		tmp_205072.id = "documentation";
		F.line = 10;
		var tmp_205078 = tree_137048(43, []);
		F.line = 10;
		tmp_205078.class = "container";
		F.line = 11;
		var tmp_205084 = tree_137048(43, []);
		F.line = 11;
		tmp_205084.class = "row";
		F.line = 12;
		var tmp_205090 = tree_137048(43, []);
		F.line = 12;
		tmp_205090.class = "col text-justify";
		F.line = 13;
		var tmp_205096 = tree_137048(22, []);
		F.line = 13;
		tmp_205096.class = "section-heading";
		F.line = 14;
		add_135777(tmp_205096, text_137175(get_str_176679(HEX5BHEX5D_187196(c_205056, makeNimstrLit("title")), makeNimstrLit(""))));
		F.line = 14;
		add_135777(tmp_205090, tmp_205096);
		F.line = 14;
		add_135777(tmp_205084, tmp_205090);
		F.line = 14;
		add_135777(tmp_205078, tmp_205084);
		L1: do {
			F.line = 15;
			var i_205098 = null;
			F.line = 681;
			var colontmp__205136 = null;
			F.line = 15;
			colontmp__205136 = HEX5BHEX5D_187196(c_205056, makeNimstrLit("items"));
			if (!((colontmp__205136.kind == 6))) {
			F.line = 683;
			failed_assert_impl_20681(makeNimstrLit("node.kind == JArray "));
			}
			
			L2: do {
				F.line = 684;
				var i_205140 = null;
				F.line = 3788;
				var colontmp__205142 = null;
				F.line = 684;
				colontmp__205142 = colontmp__205136.elems;
				F.line = 3790;
				var i_205144 = 0;
				F.line = 3791;
				var l_205146 = (colontmp__205142 != null ? colontmp__205142.length : 0);
				L3: do {
					F.line = 3792;
						L4: while (true) {
						if (!(i_205144 < l_205146)) break L4;
							F.line = 3793;
							i_205140 = colontmp__205142[chckIndx(i_205144, 0, colontmp__205142.length+0-1)-0];
							F.line = 685;
							i_205098 = i_205140;
							F.line = 16;
							var tmp_205104 = tree_137048(43, []);
							F.line = 16;
							tmp_205104.class = "row";
							F.line = 17;
							var tmp_205110 = tree_137048(43, []);
							F.line = 17;
							tmp_205110.class = "col text-justify";
							F.line = 18;
							var tmp_205116 = tree_137048(31, []);
							F.line = 19;
							add_135777(tmp_205116, text_137175(get_str_176679(HEX5BHEX5D_187196(i_205098, makeNimstrLit("text")), makeNimstrLit(""))));
							F.line = 20;
							var tmp_205123 = tree_137048(44, []);
							F.line = 20;
							set_attr_135549(tmp_205123, "href", toJSStr(get_str_176679(HEX5BHEX5D_187196(i_205098, makeNimstrLit("link")), makeNimstrLit(""))));
							F.line = 20;
							add_135777(tmp_205123, text_137175(get_str_176679(HEX5BHEX5D_187196(i_205098, makeNimstrLit("link-label")), makeNimstrLit(""))));
							F.line = 20;
							add_135777(tmp_205116, tmp_205123);
							F.line = 20;
							add_135777(tmp_205110, tmp_205116);
							F.line = 20;
							add_135777(tmp_205104, tmp_205110);
							F.line = 20;
							add_135777(tmp_205078, tmp_205104);
							F.line = 3794;
							i_205144 = addInt(i_205144, 1);
							if (!(((colontmp__205142 != null ? colontmp__205142.length : 0) == l_205146))) {
							F.line = 3795;
							failed_assert_impl_20681(makeNimstrLit("len(a) == L seq modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
		} while(false);
		F.line = 20;
		add_135777(tmp_205072, tmp_205078);
		result_205057 = tmp_205072;
	framePtr = F.prev;

	return result_205057;

}

function collaborate_206041(c_206043) {
	var result_206044 = null;

	var F={procname:"collaborate.collaborate",prev:framePtr,filename:"components/collaborate.nim",line:0};
	framePtr = F;
		F.line = 8;
		F.line = 8;
		var tmp_206068 = tree_137048(17, []);
		F.line = 8;
		tmp_206068.class = "bg-dark";
		F.line = 8;
		tmp_206068.id = "collaborate";
		F.line = 9;
		var tmp_206074 = tree_137048(43, []);
		F.line = 9;
		tmp_206074.class = "container";
		F.line = 10;
		var tmp_206080 = tree_137048(43, []);
		F.line = 10;
		tmp_206080.class = "row";
		F.line = 11;
		var tmp_206086 = tree_137048(43, []);
		F.line = 11;
		tmp_206086.class = "col";
		F.line = 12;
		var tmp_206092 = tree_137048(22, []);
		F.line = 12;
		tmp_206092.class = "section-heading text-justify";
		F.line = 12;
		add_135777(tmp_206092, text_137175(makeNimstrLit("Collaborate")));
		F.line = 12;
		add_135777(tmp_206086, tmp_206092);
		F.line = 12;
		add_135777(tmp_206080, tmp_206086);
		F.line = 12;
		add_135777(tmp_206074, tmp_206080);
		F.line = 13;
		var tmp_206098 = tree_137048(43, []);
		F.line = 13;
		tmp_206098.class = "row";
		F.line = 14;
		var tmp_206104 = tree_137048(43, []);
		F.line = 14;
		tmp_206104.class = "col";
		F.line = 15;
		var tmp_206110 = tree_137048(23, []);
		F.line = 15;
		add_135777(tmp_206110, text_137175(makeNimstrLit("Volunteer")));
		F.line = 15;
		add_135777(tmp_206104, tmp_206110);
		F.line = 16;
		var tmp_206116 = tree_137048(31, []);
		F.line = 16;
		add_135777(tmp_206116, text_137175(makeNimstrLit("We are fully loaded with work, and we welcome all proactive members of the community who would like to participate and get involved in the development of CDT.")));
		F.line = 16;
		add_135777(tmp_206104, tmp_206116);
		F.line = 17;
		var tmp_206122 = tree_137048(31, []);
		F.line = 18;
		add_135777(tmp_206122, text_137175(makeNimstrLit("Check us on ")));
		F.line = 19;
		var tmp_206128 = tree_137048(44, []);
		F.line = 19;
		set_attr_135549(tmp_206128, "href", "https://github.com/CollectiveDataTrust");
		F.line = 19;
		add_135777(tmp_206128, text_137175(makeNimstrLit("Github")));
		F.line = 19;
		add_135777(tmp_206122, tmp_206128);
		F.line = 20;
		add_135777(tmp_206122, text_137175(makeNimstrLit(" or send us an ")));
		F.line = 21;
		var tmp_206134 = tree_137048(44, []);
		F.line = 21;
		set_attr_135549(tmp_206134, "href", "mailto:info@collectivedatatrust.com");
		F.line = 21;
		add_135777(tmp_206134, text_137175(makeNimstrLit("Email")));
		F.line = 21;
		add_135777(tmp_206122, tmp_206134);
		F.line = 21;
		add_135777(tmp_206104, tmp_206122);
		F.line = 21;
		add_135777(tmp_206098, tmp_206104);
		F.line = 21;
		add_135777(tmp_206074, tmp_206098);
		F.line = 22;
		var tmp_206140 = tree_137048(43, []);
		F.line = 22;
		tmp_206140.class = "row";
		F.line = 23;
		var tmp_206146 = tree_137048(43, []);
		F.line = 23;
		tmp_206146.class = "col";
		F.line = 24;
		var tmp_206152 = tree_137048(23, []);
		F.line = 24;
		add_135777(tmp_206152, text_137175(makeNimstrLit("Donate")));
		F.line = 24;
		add_135777(tmp_206146, tmp_206152);
		F.line = 25;
		var tmp_206158 = tree_137048(31, []);
		F.line = 25;
		add_135777(tmp_206158, text_137175(makeNimstrLit("We are finishing paperwork so we can receive your donations via credit card or bank transfer.")));
		F.line = 25;
		add_135777(tmp_206146, tmp_206158);
		F.line = 26;
		var tmp_206164 = tree_137048(31, []);
		F.line = 27;
		add_135777(tmp_206164, text_137175(makeNimstrLit("Leave your email here, let\'s be in ")));
		F.line = 28;
		var tmp_206170 = tree_137048(44, []);
		F.line = 28;
		set_attr_135549(tmp_206170, "href", "mailto:info@collectivedatatrust.com");
		F.line = 28;
		add_135777(tmp_206170, text_137175(makeNimstrLit(" touch")));
		F.line = 28;
		add_135777(tmp_206164, tmp_206170);
		F.line = 28;
		add_135777(tmp_206146, tmp_206164);
		F.line = 28;
		add_135777(tmp_206140, tmp_206146);
		F.line = 28;
		add_135777(tmp_206074, tmp_206140);
		F.line = 28;
		add_135777(tmp_206068, tmp_206074);
		result_206044 = tmp_206068;
	framePtr = F.prev;

	return result_206044;

}

function main_container_208267() {
	var result_208269 = null;

	var F={procname:"index.MainContainer",prev:framePtr,filename:"index.nim",line:0};
	framePtr = F;
		F.line = 69;
		c_208029[0] = HEX5BHEX5D_187196(cont_204478[0], lang_208015[0]);
		F.line = 74;
		F.line = 74;
		var tmp_208277 = tree_137048(43, []);
		F.line = 75;
		add_135777(tmp_208277, tmenu_208043());
		F.line = 76;
		add_135777(tmp_208277, logoheader_208211());
		F.line = 77;
		add_135777(tmp_208277, parts_203186(HEX5BHEX5D_187196(c_208029[0], makeNimstrLit("sections"))));
		F.line = 78;
		add_135777(tmp_208277, documentation_205054(HEX5BHEX5D_187196(c_208029[0], makeNimstrLit("documentation"))));
		F.line = 79;
		add_135777(tmp_208277, collaborate_206041(c_208029[0]));
		F.line = 81;
		var tmp_208283 = tree_137048(14, []);
		F.line = 81;
		set_attr_135549(tmp_208283, "src", "js/agency.js");
		F.line = 81;
		add_135777(tmp_208277, tmp_208283);
		result_208269 = tmp_208277;
	framePtr = F.prev;

	return result_208269;

}

function create_dom_208299(data_208301) {
	var result_208302 = null;

	var F={procname:"index.createDOM",prev:framePtr,filename:"index.nim",line:0};
	framePtr = F;
		F.line = 86;
		F.line = 86;
		var tmp_208309 = tree_137048(43, []);
		F.line = 87;
		add_135777(tmp_208309, main_container_208267());
		result_208302 = tmp_208309;
	framePtr = F.prev;

	return result_208302;

}
set_renderer_160478(create_dom_208299, "ROOT", null);
